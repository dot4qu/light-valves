ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_EncodePriority,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	NVIC_EncodePriority:
  24              	.LVL0:
  25              	.LFB55:
  26              		.file 1 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /*
   8:Drivers/CMSIS/Include/core_cm3.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm3.h ****  *
  10:Drivers/CMSIS/Include/core_cm3.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm3.h ****  *
  12:Drivers/CMSIS/Include/core_cm3.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm3.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm3.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm3.h ****  *
  16:Drivers/CMSIS/Include/core_cm3.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm3.h ****  *
  18:Drivers/CMSIS/Include/core_cm3.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm3.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm3.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm3.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm3.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm3.h ****  */
  24:Drivers/CMSIS/Include/core_cm3.h **** 
  25:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm3.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm3.h **** #endif
  30:Drivers/CMSIS/Include/core_cm3.h **** 
  31:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 2


  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm3.h **** 
  36:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm3.h **** #endif
  39:Drivers/CMSIS/Include/core_cm3.h **** 
  40:Drivers/CMSIS/Include/core_cm3.h **** /**
  41:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm3.h **** 
  47:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm3.h ****  */
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h **** 
  55:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm3.h **** /**
  59:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  60:Drivers/CMSIS/Include/core_cm3.h ****   @{
  61:Drivers/CMSIS/Include/core_cm3.h ****  */
  62:Drivers/CMSIS/Include/core_cm3.h **** 
  63:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  66:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm3.h **** 
  71:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (3U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm3.h **** */
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm3.h **** 
  78:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm3.h **** 
  83:Drivers/CMSIS/Include/core_cm3.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm3.h **** 
  88:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 3


  90:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm3.h **** 
  93:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm3.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm3.h **** 
  98:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm3.h **** 
 103:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm3.h **** 
 108:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm3.h **** 
 113:Drivers/CMSIS/Include/core_cm3.h **** #endif
 114:Drivers/CMSIS/Include/core_cm3.h **** 
 115:Drivers/CMSIS/Include/core_cm3.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** 
 118:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm3.h **** }
 120:Drivers/CMSIS/Include/core_cm3.h **** #endif
 121:Drivers/CMSIS/Include/core_cm3.h **** 
 122:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm3.h **** 
 124:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm3.h **** 
 129:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm3.h **** #endif
 132:Drivers/CMSIS/Include/core_cm3.h **** 
 133:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 136:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 137:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm3.h **** 
 140:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm3.h **** 
 145:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 146:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          3U
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 4


 147:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm3.h **** 
 150:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 151:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 152:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm3.h **** #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
 156:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 157:Drivers/CMSIS/Include/core_cm3.h **** /**
 158:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 159:Drivers/CMSIS/Include/core_cm3.h **** 
 160:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 161:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 162:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 163:Drivers/CMSIS/Include/core_cm3.h **** */
 164:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 165:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 166:Drivers/CMSIS/Include/core_cm3.h **** #else
 167:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 170:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 173:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 174:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 175:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 178:Drivers/CMSIS/Include/core_cm3.h **** 
 179:Drivers/CMSIS/Include/core_cm3.h **** 
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 182:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 183:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 184:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 185:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 186:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 187:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 188:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 189:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 190:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 191:Drivers/CMSIS/Include/core_cm3.h **** /**
 192:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 193:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 194:Drivers/CMSIS/Include/core_cm3.h **** */
 195:Drivers/CMSIS/Include/core_cm3.h **** 
 196:Drivers/CMSIS/Include/core_cm3.h **** /**
 197:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 198:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 199:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 200:Drivers/CMSIS/Include/core_cm3.h ****   @{
 201:Drivers/CMSIS/Include/core_cm3.h ****  */
 202:Drivers/CMSIS/Include/core_cm3.h **** 
 203:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 5


 204:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 205:Drivers/CMSIS/Include/core_cm3.h ****  */
 206:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 207:Drivers/CMSIS/Include/core_cm3.h **** {
 208:Drivers/CMSIS/Include/core_cm3.h ****   struct
 209:Drivers/CMSIS/Include/core_cm3.h ****   {
 210:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 211:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 212:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 213:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 214:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 215:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 216:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 217:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 218:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 222:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm3.h **** 
 224:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm3.h **** 
 230:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm3.h **** 
 233:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm3.h **** 
 236:Drivers/CMSIS/Include/core_cm3.h **** 
 237:Drivers/CMSIS/Include/core_cm3.h **** /**
 238:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm3.h ****  */
 240:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm3.h **** {
 242:Drivers/CMSIS/Include/core_cm3.h ****   struct
 243:Drivers/CMSIS/Include/core_cm3.h ****   {
 244:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm3.h **** 
 250:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm3.h **** 
 254:Drivers/CMSIS/Include/core_cm3.h **** 
 255:Drivers/CMSIS/Include/core_cm3.h **** /**
 256:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm3.h ****  */
 258:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm3.h **** {
 260:Drivers/CMSIS/Include/core_cm3.h ****   struct
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 6


 261:Drivers/CMSIS/Include/core_cm3.h ****   {
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 264:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 265:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:8;               /*!< bit: 16..23  Reserved */
 266:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 267:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 268:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 269:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 270:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 271:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 272:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 273:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 274:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 275:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 276:Drivers/CMSIS/Include/core_cm3.h **** 
 277:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 278:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm3.h **** 
 287:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm3.h **** 
 290:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm3.h **** 
 293:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 294:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 295:Drivers/CMSIS/Include/core_cm3.h **** 
 296:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 297:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 298:Drivers/CMSIS/Include/core_cm3.h **** 
 299:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 303:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 304:Drivers/CMSIS/Include/core_cm3.h **** 
 305:Drivers/CMSIS/Include/core_cm3.h **** 
 306:Drivers/CMSIS/Include/core_cm3.h **** /**
 307:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 308:Drivers/CMSIS/Include/core_cm3.h ****  */
 309:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 310:Drivers/CMSIS/Include/core_cm3.h **** {
 311:Drivers/CMSIS/Include/core_cm3.h ****   struct
 312:Drivers/CMSIS/Include/core_cm3.h ****   {
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 316:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 317:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 7


 318:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 319:Drivers/CMSIS/Include/core_cm3.h **** 
 320:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 321:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 322:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 323:Drivers/CMSIS/Include/core_cm3.h **** 
 324:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 325:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 326:Drivers/CMSIS/Include/core_cm3.h **** 
 327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 328:Drivers/CMSIS/Include/core_cm3.h **** 
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** /**
 331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 334:Drivers/CMSIS/Include/core_cm3.h ****   @{
 335:Drivers/CMSIS/Include/core_cm3.h ****  */
 336:Drivers/CMSIS/Include/core_cm3.h **** 
 337:Drivers/CMSIS/Include/core_cm3.h **** /**
 338:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 339:Drivers/CMSIS/Include/core_cm3.h ****  */
 340:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 341:Drivers/CMSIS/Include/core_cm3.h **** {
 342:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 343:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 344:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 345:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 346:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 347:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 348:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 349:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 350:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 351:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 352:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 353:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 354:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 355:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 356:Drivers/CMSIS/Include/core_cm3.h **** 
 357:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 358:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 359:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 360:Drivers/CMSIS/Include/core_cm3.h **** 
 361:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** 
 364:Drivers/CMSIS/Include/core_cm3.h **** /**
 365:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 366:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 367:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 368:Drivers/CMSIS/Include/core_cm3.h ****   @{
 369:Drivers/CMSIS/Include/core_cm3.h ****  */
 370:Drivers/CMSIS/Include/core_cm3.h **** 
 371:Drivers/CMSIS/Include/core_cm3.h **** /**
 372:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 373:Drivers/CMSIS/Include/core_cm3.h ****  */
 374:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 8


 375:Drivers/CMSIS/Include/core_cm3.h **** {
 376:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 377:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 378:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 379:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 380:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 381:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 382:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 383:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 384:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 388:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 390:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 392:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 395:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 396:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 397:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 398:Drivers/CMSIS/Include/core_cm3.h **** 
 399:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 400:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm3.h **** 
 403:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm3.h **** 
 409:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm3.h **** 
 412:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm3.h **** 
 415:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 416:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 418:Drivers/CMSIS/Include/core_cm3.h **** 
 419:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm3.h **** 
 422:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm3.h **** 
 425:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm3.h **** 
 428:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm3.h **** 
 431:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 9


 432:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm3.h **** 
 434:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm3.h **** 
 437:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm3.h **** 
 440:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm3.h **** 
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 447:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV < 0x0201U)                   /* core r2p1 */
 448:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** 
 451:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #else
 454:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #endif
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm3.h **** 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm3.h **** 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 10


 489:Drivers/CMSIS/Include/core_cm3.h **** 
 490:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** 
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** 
 500:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm3.h **** 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm3.h **** 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm3.h **** 
 509:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 510:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** 
 513:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** 
 516:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** 
 519:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** 
 522:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm3.h **** 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm3.h **** 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm3.h **** 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm3.h **** 
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 11


 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm3.h **** 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm3.h **** 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm3.h **** 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm3.h **** 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm3.h **** 
 578:Drivers/CMSIS/Include/core_cm3.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 579:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** 
 582:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** 
 585:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** 
 588:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** 
 591:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** 
 594:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm3.h **** 
 597:Drivers/CMSIS/Include/core_cm3.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 598:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** 
 601:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 12


 603:Drivers/CMSIS/Include/core_cm3.h **** 
 604:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm3.h **** 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm3.h **** 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm3.h **** 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm3.h **** 
 616:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm3.h **** 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm3.h **** 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm3.h **** 
 626:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 627:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** 
 630:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm3.h **** 
 636:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm3.h **** 
 639:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm3.h **** 
 642:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 643:Drivers/CMSIS/Include/core_cm3.h **** 
 644:Drivers/CMSIS/Include/core_cm3.h **** 
 645:Drivers/CMSIS/Include/core_cm3.h **** /**
 646:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 647:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 648:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 649:Drivers/CMSIS/Include/core_cm3.h ****   @{
 650:Drivers/CMSIS/Include/core_cm3.h ****  */
 651:Drivers/CMSIS/Include/core_cm3.h **** 
 652:Drivers/CMSIS/Include/core_cm3.h **** /**
 653:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 654:Drivers/CMSIS/Include/core_cm3.h ****  */
 655:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 656:Drivers/CMSIS/Include/core_cm3.h **** {
 657:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 658:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 659:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__CM3_REV) && (__CM3_REV >= 0x200U)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 13


 660:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 661:Drivers/CMSIS/Include/core_cm3.h **** #else
 662:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 663:Drivers/CMSIS/Include/core_cm3.h **** #endif
 664:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 665:Drivers/CMSIS/Include/core_cm3.h **** 
 666:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 673:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 674:Drivers/CMSIS/Include/core_cm3.h **** 
 675:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 676:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 677:Drivers/CMSIS/Include/core_cm3.h **** 
 678:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 680:Drivers/CMSIS/Include/core_cm3.h **** 
 681:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 682:Drivers/CMSIS/Include/core_cm3.h **** 
 683:Drivers/CMSIS/Include/core_cm3.h **** 
 684:Drivers/CMSIS/Include/core_cm3.h **** /**
 685:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 686:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 687:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 688:Drivers/CMSIS/Include/core_cm3.h ****   @{
 689:Drivers/CMSIS/Include/core_cm3.h ****  */
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /**
 692:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 693:Drivers/CMSIS/Include/core_cm3.h ****  */
 694:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 695:Drivers/CMSIS/Include/core_cm3.h **** {
 696:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 697:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 698:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 699:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 700:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 701:Drivers/CMSIS/Include/core_cm3.h **** 
 702:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 703:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 704:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 705:Drivers/CMSIS/Include/core_cm3.h **** 
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 708:Drivers/CMSIS/Include/core_cm3.h **** 
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** 
 715:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 14


 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 722:Drivers/CMSIS/Include/core_cm3.h **** 
 723:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 724:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 725:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 726:Drivers/CMSIS/Include/core_cm3.h **** 
 727:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 728:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 729:Drivers/CMSIS/Include/core_cm3.h **** 
 730:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 731:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 732:Drivers/CMSIS/Include/core_cm3.h **** 
 733:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 734:Drivers/CMSIS/Include/core_cm3.h **** 
 735:Drivers/CMSIS/Include/core_cm3.h **** 
 736:Drivers/CMSIS/Include/core_cm3.h **** /**
 737:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 738:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 739:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 740:Drivers/CMSIS/Include/core_cm3.h ****   @{
 741:Drivers/CMSIS/Include/core_cm3.h ****  */
 742:Drivers/CMSIS/Include/core_cm3.h **** 
 743:Drivers/CMSIS/Include/core_cm3.h **** /**
 744:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 745:Drivers/CMSIS/Include/core_cm3.h ****  */
 746:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 747:Drivers/CMSIS/Include/core_cm3.h **** {
 748:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 749:Drivers/CMSIS/Include/core_cm3.h ****   {
 750:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 751:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 752:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 753:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 754:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 758:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 760:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 761:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 764:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 765:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 767:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 770:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 771:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 772:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 773:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 15


 774:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 775:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 777:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 778:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 779:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 780:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 785:Drivers/CMSIS/Include/core_cm3.h **** 
 786:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 787:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** 
 790:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** 
 793:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** 
 796:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** 
 799:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** 
 802:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 803:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm3.h **** 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm3.h **** 
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** 
 814:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 815:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** 
 818:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 825:Drivers/CMSIS/Include/core_cm3.h **** 
 826:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 827:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 829:Drivers/CMSIS/Include/core_cm3.h **** 
 830:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 16


 831:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm3.h **** 
 833:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm3.h **** 
 836:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 837:Drivers/CMSIS/Include/core_cm3.h **** 
 838:Drivers/CMSIS/Include/core_cm3.h **** 
 839:Drivers/CMSIS/Include/core_cm3.h **** /**
 840:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 841:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 842:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 843:Drivers/CMSIS/Include/core_cm3.h ****   @{
 844:Drivers/CMSIS/Include/core_cm3.h ****  */
 845:Drivers/CMSIS/Include/core_cm3.h **** 
 846:Drivers/CMSIS/Include/core_cm3.h **** /**
 847:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 848:Drivers/CMSIS/Include/core_cm3.h ****  */
 849:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 850:Drivers/CMSIS/Include/core_cm3.h **** {
 851:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 855:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 859:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 862:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 863:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 864:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 865:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 866:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 867:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 868:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 869:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 870:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 871:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 872:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 873:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 874:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 875:Drivers/CMSIS/Include/core_cm3.h **** 
 876:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 877:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** 
 880:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** 
 883:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** 
 886:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 17


 888:Drivers/CMSIS/Include/core_cm3.h **** 
 889:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** 
 892:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** 
 895:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 897:Drivers/CMSIS/Include/core_cm3.h **** 
 898:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** 
 901:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** 
 904:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** 
 907:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** 
 910:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** 
 913:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** 
 916:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** 
 919:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 921:Drivers/CMSIS/Include/core_cm3.h **** 
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 924:Drivers/CMSIS/Include/core_cm3.h **** 
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 930:Drivers/CMSIS/Include/core_cm3.h **** 
 931:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 932:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 934:Drivers/CMSIS/Include/core_cm3.h **** 
 935:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 936:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 938:Drivers/CMSIS/Include/core_cm3.h **** 
 939:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 940:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 942:Drivers/CMSIS/Include/core_cm3.h **** 
 943:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 944:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 18


 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 946:Drivers/CMSIS/Include/core_cm3.h **** 
 947:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 953:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 954:Drivers/CMSIS/Include/core_cm3.h **** 
 955:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 956:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** 
 959:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** 
 962:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** 
 965:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** 
 968:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** 
 971:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 976:Drivers/CMSIS/Include/core_cm3.h **** 
 977:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 979:Drivers/CMSIS/Include/core_cm3.h **** 
 980:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 982:Drivers/CMSIS/Include/core_cm3.h **** 
 983:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 984:Drivers/CMSIS/Include/core_cm3.h **** 
 985:Drivers/CMSIS/Include/core_cm3.h **** 
 986:Drivers/CMSIS/Include/core_cm3.h **** /**
 987:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 988:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 989:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 990:Drivers/CMSIS/Include/core_cm3.h ****   @{
 991:Drivers/CMSIS/Include/core_cm3.h ****  */
 992:Drivers/CMSIS/Include/core_cm3.h **** 
 993:Drivers/CMSIS/Include/core_cm3.h **** /**
 994:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 995:Drivers/CMSIS/Include/core_cm3.h ****  */
 996:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 997:Drivers/CMSIS/Include/core_cm3.h **** {
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1000:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
1001:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 19


1002:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1004:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
1005:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1011:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1012:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1013:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1014:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1015:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1016:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1017:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1018:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1019:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1020:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1021:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1022:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1023:Drivers/CMSIS/Include/core_cm3.h **** 
1024:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1030:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1031:Drivers/CMSIS/Include/core_cm3.h **** 
1032:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1033:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1034:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1035:Drivers/CMSIS/Include/core_cm3.h **** 
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm3.h **** 
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm3.h **** 
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1054:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1055:Drivers/CMSIS/Include/core_cm3.h **** 
1056:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1057:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 20


1059:Drivers/CMSIS/Include/core_cm3.h **** 
1060:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** 
1063:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** 
1066:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm3.h **** 
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm3.h **** 
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1080:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1081:Drivers/CMSIS/Include/core_cm3.h **** 
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm3.h **** 
1085:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** 
1089:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** 
1092:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm3.h **** 
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm3.h **** 
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm3.h **** 
1104:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm3.h **** 
1107:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 21


1116:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1117:Drivers/CMSIS/Include/core_cm3.h **** 
1118:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1119:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm3.h **** 
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm3.h **** 
1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm3.h **** 
1128:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm3.h **** 
1131:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm3.h **** 
1134:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1135:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm3.h **** 
1137:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1138:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm3.h **** 
1141:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1142:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1143:Drivers/CMSIS/Include/core_cm3.h **** 
1144:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1145:Drivers/CMSIS/Include/core_cm3.h **** 
1146:Drivers/CMSIS/Include/core_cm3.h **** 
1147:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1148:Drivers/CMSIS/Include/core_cm3.h **** /**
1149:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1150:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1151:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1152:Drivers/CMSIS/Include/core_cm3.h ****   @{
1153:Drivers/CMSIS/Include/core_cm3.h ****  */
1154:Drivers/CMSIS/Include/core_cm3.h **** 
1155:Drivers/CMSIS/Include/core_cm3.h **** /**
1156:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1157:Drivers/CMSIS/Include/core_cm3.h ****  */
1158:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1159:Drivers/CMSIS/Include/core_cm3.h **** {
1160:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1161:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1162:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1163:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1164:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1165:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1166:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1167:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1168:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1169:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1170:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1171:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1172:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 22


1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_RALIASES                  4U
1174:Drivers/CMSIS/Include/core_cm3.h **** 
1175:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1176:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** 
1179:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm3.h **** 
1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm3.h **** 
1185:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1186:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** 
1189:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm3.h **** 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm3.h **** 
1195:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1196:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** 
1199:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1212:Drivers/CMSIS/Include/core_cm3.h **** 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1215:Drivers/CMSIS/Include/core_cm3.h **** 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1218:Drivers/CMSIS/Include/core_cm3.h **** 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1221:Drivers/CMSIS/Include/core_cm3.h **** 
1222:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm3.h **** 
1228:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 23


1230:Drivers/CMSIS/Include/core_cm3.h **** 
1231:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm3.h **** 
1234:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm3.h **** 
1237:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm3.h **** 
1240:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1241:Drivers/CMSIS/Include/core_cm3.h **** #endif
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** 
1244:Drivers/CMSIS/Include/core_cm3.h **** /**
1245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1247:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1248:Drivers/CMSIS/Include/core_cm3.h ****   @{
1249:Drivers/CMSIS/Include/core_cm3.h ****  */
1250:Drivers/CMSIS/Include/core_cm3.h **** 
1251:Drivers/CMSIS/Include/core_cm3.h **** /**
1252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1253:Drivers/CMSIS/Include/core_cm3.h ****  */
1254:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1255:Drivers/CMSIS/Include/core_cm3.h **** {
1256:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1257:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1258:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1259:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1260:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1265:Drivers/CMSIS/Include/core_cm3.h **** 
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1268:Drivers/CMSIS/Include/core_cm3.h **** 
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1271:Drivers/CMSIS/Include/core_cm3.h **** 
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1274:Drivers/CMSIS/Include/core_cm3.h **** 
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1277:Drivers/CMSIS/Include/core_cm3.h **** 
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1280:Drivers/CMSIS/Include/core_cm3.h **** 
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 24


1287:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** 
1290:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** 
1293:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** 
1296:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** 
1299:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1309:Drivers/CMSIS/Include/core_cm3.h **** 
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1312:Drivers/CMSIS/Include/core_cm3.h **** 
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1315:Drivers/CMSIS/Include/core_cm3.h **** 
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1318:Drivers/CMSIS/Include/core_cm3.h **** 
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1321:Drivers/CMSIS/Include/core_cm3.h **** 
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1324:Drivers/CMSIS/Include/core_cm3.h **** 
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1327:Drivers/CMSIS/Include/core_cm3.h **** 
1328:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1329:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1330:Drivers/CMSIS/Include/core_cm3.h **** 
1331:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1332:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1333:Drivers/CMSIS/Include/core_cm3.h **** 
1334:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1335:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1338:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1339:Drivers/CMSIS/Include/core_cm3.h **** 
1340:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1341:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1342:Drivers/CMSIS/Include/core_cm3.h **** 
1343:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 25


1344:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1345:Drivers/CMSIS/Include/core_cm3.h **** 
1346:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1347:Drivers/CMSIS/Include/core_cm3.h **** 
1348:Drivers/CMSIS/Include/core_cm3.h **** 
1349:Drivers/CMSIS/Include/core_cm3.h **** /**
1350:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1351:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1352:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1353:Drivers/CMSIS/Include/core_cm3.h ****   @{
1354:Drivers/CMSIS/Include/core_cm3.h ****  */
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1358:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1359:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1360:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1361:Drivers/CMSIS/Include/core_cm3.h **** */
1362:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1363:Drivers/CMSIS/Include/core_cm3.h **** 
1364:Drivers/CMSIS/Include/core_cm3.h **** /**
1365:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1366:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1367:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1368:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1369:Drivers/CMSIS/Include/core_cm3.h **** */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1371:Drivers/CMSIS/Include/core_cm3.h **** 
1372:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1373:Drivers/CMSIS/Include/core_cm3.h **** 
1374:Drivers/CMSIS/Include/core_cm3.h **** 
1375:Drivers/CMSIS/Include/core_cm3.h **** /**
1376:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1377:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1378:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1379:Drivers/CMSIS/Include/core_cm3.h ****   @{
1380:Drivers/CMSIS/Include/core_cm3.h ****  */
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Core Hardware */
1383:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1384:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1385:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1386:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1387:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1388:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1389:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1390:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1391:Drivers/CMSIS/Include/core_cm3.h **** 
1392:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1393:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1394:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1395:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1396:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1397:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1398:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1399:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1400:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 26


1401:Drivers/CMSIS/Include/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1402:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1403:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1404:Drivers/CMSIS/Include/core_cm3.h **** #endif
1405:Drivers/CMSIS/Include/core_cm3.h **** 
1406:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1407:Drivers/CMSIS/Include/core_cm3.h **** 
1408:Drivers/CMSIS/Include/core_cm3.h **** 
1409:Drivers/CMSIS/Include/core_cm3.h **** 
1410:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1411:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1412:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1413:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1414:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1415:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1416:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1417:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1418:Drivers/CMSIS/Include/core_cm3.h **** /**
1419:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1420:Drivers/CMSIS/Include/core_cm3.h **** */
1421:Drivers/CMSIS/Include/core_cm3.h **** 
1422:Drivers/CMSIS/Include/core_cm3.h **** 
1423:Drivers/CMSIS/Include/core_cm3.h **** 
1424:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1425:Drivers/CMSIS/Include/core_cm3.h **** /**
1426:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1427:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1428:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1429:Drivers/CMSIS/Include/core_cm3.h ****   @{
1430:Drivers/CMSIS/Include/core_cm3.h ****  */
1431:Drivers/CMSIS/Include/core_cm3.h **** 
1432:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_NVIC_VIRTUAL
1433:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1434:Drivers/CMSIS/Include/core_cm3.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1435:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1436:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1437:Drivers/CMSIS/Include/core_cm3.h **** #else
1438:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1439:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1440:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1441:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1442:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1443:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1444:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1445:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1446:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetActive              __NVIC_GetActive
1447:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1448:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1449:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1450:Drivers/CMSIS/Include/core_cm3.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1451:Drivers/CMSIS/Include/core_cm3.h **** 
1452:Drivers/CMSIS/Include/core_cm3.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1453:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1454:Drivers/CMSIS/Include/core_cm3.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1455:Drivers/CMSIS/Include/core_cm3.h ****   #endif
1456:Drivers/CMSIS/Include/core_cm3.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1457:Drivers/CMSIS/Include/core_cm3.h **** #else
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 27


1458:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_SetVector              __NVIC_SetVector
1459:Drivers/CMSIS/Include/core_cm3.h ****   #define NVIC_GetVector              __NVIC_GetVector
1460:Drivers/CMSIS/Include/core_cm3.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1461:Drivers/CMSIS/Include/core_cm3.h **** 
1462:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_USER_IRQ_OFFSET          16
1463:Drivers/CMSIS/Include/core_cm3.h **** 
1464:Drivers/CMSIS/Include/core_cm3.h **** 
1465:Drivers/CMSIS/Include/core_cm3.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1466:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1467:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1468:Drivers/CMSIS/Include/core_cm3.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1469:Drivers/CMSIS/Include/core_cm3.h **** 
1470:Drivers/CMSIS/Include/core_cm3.h **** 
1471:Drivers/CMSIS/Include/core_cm3.h **** /**
1472:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1473:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1474:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1475:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1476:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1477:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1478:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1479:Drivers/CMSIS/Include/core_cm3.h ****  */
1480:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1481:Drivers/CMSIS/Include/core_cm3.h **** {
1482:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1483:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1484:Drivers/CMSIS/Include/core_cm3.h **** 
1485:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1486:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1487:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1488:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1489:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key a
1490:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1491:Drivers/CMSIS/Include/core_cm3.h **** }
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** 
1494:Drivers/CMSIS/Include/core_cm3.h **** /**
1495:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1496:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1497:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1498:Drivers/CMSIS/Include/core_cm3.h ****  */
1499:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1500:Drivers/CMSIS/Include/core_cm3.h **** {
1501:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1502:Drivers/CMSIS/Include/core_cm3.h **** }
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** 
1505:Drivers/CMSIS/Include/core_cm3.h **** /**
1506:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable Interrupt
1507:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1514:Drivers/CMSIS/Include/core_cm3.h ****   {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 28


1515:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1516:Drivers/CMSIS/Include/core_cm3.h ****   }
1517:Drivers/CMSIS/Include/core_cm3.h **** }
1518:Drivers/CMSIS/Include/core_cm3.h **** 
1519:Drivers/CMSIS/Include/core_cm3.h **** 
1520:Drivers/CMSIS/Include/core_cm3.h **** /**
1521:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Enable status
1522:Drivers/CMSIS/Include/core_cm3.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1523:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1524:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt is not enabled.
1525:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt is enabled.
1526:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1527:Drivers/CMSIS/Include/core_cm3.h ****  */
1528:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1529:Drivers/CMSIS/Include/core_cm3.h **** {
1530:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h ****   else
1535:Drivers/CMSIS/Include/core_cm3.h ****   {
1536:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1537:Drivers/CMSIS/Include/core_cm3.h ****   }
1538:Drivers/CMSIS/Include/core_cm3.h **** }
1539:Drivers/CMSIS/Include/core_cm3.h **** 
1540:Drivers/CMSIS/Include/core_cm3.h **** 
1541:Drivers/CMSIS/Include/core_cm3.h **** /**
1542:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable Interrupt
1543:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1545:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1546:Drivers/CMSIS/Include/core_cm3.h ****  */
1547:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm3.h **** {
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1552:Drivers/CMSIS/Include/core_cm3.h ****     __DSB();
1553:Drivers/CMSIS/Include/core_cm3.h ****     __ISB();
1554:Drivers/CMSIS/Include/core_cm3.h ****   }
1555:Drivers/CMSIS/Include/core_cm3.h **** }
1556:Drivers/CMSIS/Include/core_cm3.h **** 
1557:Drivers/CMSIS/Include/core_cm3.h **** 
1558:Drivers/CMSIS/Include/core_cm3.h **** /**
1559:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1560:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1561:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1562:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1563:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1564:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1565:Drivers/CMSIS/Include/core_cm3.h ****  */
1566:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1567:Drivers/CMSIS/Include/core_cm3.h **** {
1568:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1569:Drivers/CMSIS/Include/core_cm3.h ****   {
1570:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1571:Drivers/CMSIS/Include/core_cm3.h ****   }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 29


1572:Drivers/CMSIS/Include/core_cm3.h ****   else
1573:Drivers/CMSIS/Include/core_cm3.h ****   {
1574:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1575:Drivers/CMSIS/Include/core_cm3.h ****   }
1576:Drivers/CMSIS/Include/core_cm3.h **** }
1577:Drivers/CMSIS/Include/core_cm3.h **** 
1578:Drivers/CMSIS/Include/core_cm3.h **** 
1579:Drivers/CMSIS/Include/core_cm3.h **** /**
1580:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1581:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1582:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1583:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1584:Drivers/CMSIS/Include/core_cm3.h ****  */
1585:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1586:Drivers/CMSIS/Include/core_cm3.h **** {
1587:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1588:Drivers/CMSIS/Include/core_cm3.h ****   {
1589:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1590:Drivers/CMSIS/Include/core_cm3.h ****   }
1591:Drivers/CMSIS/Include/core_cm3.h **** }
1592:Drivers/CMSIS/Include/core_cm3.h **** 
1593:Drivers/CMSIS/Include/core_cm3.h **** 
1594:Drivers/CMSIS/Include/core_cm3.h **** /**
1595:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1596:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1597:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1598:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1599:Drivers/CMSIS/Include/core_cm3.h ****  */
1600:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1601:Drivers/CMSIS/Include/core_cm3.h **** {
1602:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1603:Drivers/CMSIS/Include/core_cm3.h ****   {
1604:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1605:Drivers/CMSIS/Include/core_cm3.h ****   }
1606:Drivers/CMSIS/Include/core_cm3.h **** }
1607:Drivers/CMSIS/Include/core_cm3.h **** 
1608:Drivers/CMSIS/Include/core_cm3.h **** 
1609:Drivers/CMSIS/Include/core_cm3.h **** /**
1610:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1611:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1612:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Device specific interrupt number.
1613:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1614:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1615:Drivers/CMSIS/Include/core_cm3.h ****   \note    IRQn must not be negative.
1616:Drivers/CMSIS/Include/core_cm3.h ****  */
1617:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1618:Drivers/CMSIS/Include/core_cm3.h **** {
1619:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1620:Drivers/CMSIS/Include/core_cm3.h ****   {
1621:Drivers/CMSIS/Include/core_cm3.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1622:Drivers/CMSIS/Include/core_cm3.h ****   }
1623:Drivers/CMSIS/Include/core_cm3.h ****   else
1624:Drivers/CMSIS/Include/core_cm3.h ****   {
1625:Drivers/CMSIS/Include/core_cm3.h ****     return(0U);
1626:Drivers/CMSIS/Include/core_cm3.h ****   }
1627:Drivers/CMSIS/Include/core_cm3.h **** }
1628:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 30


1629:Drivers/CMSIS/Include/core_cm3.h **** 
1630:Drivers/CMSIS/Include/core_cm3.h **** /**
1631:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1632:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1633:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1634:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1635:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1636:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1637:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every processor exception.
1638:Drivers/CMSIS/Include/core_cm3.h ****  */
1639:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1640:Drivers/CMSIS/Include/core_cm3.h **** {
1641:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1642:Drivers/CMSIS/Include/core_cm3.h ****   {
1643:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1644:Drivers/CMSIS/Include/core_cm3.h ****   }
1645:Drivers/CMSIS/Include/core_cm3.h ****   else
1646:Drivers/CMSIS/Include/core_cm3.h ****   {
1647:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1648:Drivers/CMSIS/Include/core_cm3.h ****   }
1649:Drivers/CMSIS/Include/core_cm3.h **** }
1650:Drivers/CMSIS/Include/core_cm3.h **** 
1651:Drivers/CMSIS/Include/core_cm3.h **** 
1652:Drivers/CMSIS/Include/core_cm3.h **** /**
1653:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1654:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1655:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify a device specific interrupt,
1656:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify a processor exception.
1657:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1658:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1659:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1660:Drivers/CMSIS/Include/core_cm3.h ****  */
1661:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm3.h **** {
1663:Drivers/CMSIS/Include/core_cm3.h **** 
1664:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) >= 0)
1665:Drivers/CMSIS/Include/core_cm3.h ****   {
1666:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1667:Drivers/CMSIS/Include/core_cm3.h ****   }
1668:Drivers/CMSIS/Include/core_cm3.h ****   else
1669:Drivers/CMSIS/Include/core_cm3.h ****   {
1670:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1671:Drivers/CMSIS/Include/core_cm3.h ****   }
1672:Drivers/CMSIS/Include/core_cm3.h **** }
1673:Drivers/CMSIS/Include/core_cm3.h **** 
1674:Drivers/CMSIS/Include/core_cm3.h **** 
1675:Drivers/CMSIS/Include/core_cm3.h **** /**
1676:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1677:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1678:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1679:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1680:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1681:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1682:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1683:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1684:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1685:Drivers/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 31


1686:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1687:Drivers/CMSIS/Include/core_cm3.h **** {
  27              		.loc 1 1687 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 1687 1 is_stmt 0 view .LVU1
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
1688:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
  36              		.loc 1 1688 3 is_stmt 1 view .LVU2
  37              		.loc 1 1688 12 is_stmt 0 view .LVU3
  38 0002 00F00700 		and	r0, r0, #7
  39              	.LVL1:
1689:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
  40              		.loc 1 1689 3 is_stmt 1 view .LVU4
1690:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
  41              		.loc 1 1690 3 view .LVU5
1691:Drivers/CMSIS/Include/core_cm3.h **** 
1692:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
  42              		.loc 1 1692 3 view .LVU6
  43              		.loc 1 1692 31 is_stmt 0 view .LVU7
  44 0006 C0F1070C 		rsb	ip, r0, #7
  45              		.loc 1 1692 23 view .LVU8
  46 000a BCF1040F 		cmp	ip, #4
  47 000e 28BF     		it	cs
  48 0010 4FF0040C 		movcs	ip, #4
  49              	.LVL2:
1693:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  50              		.loc 1 1693 3 is_stmt 1 view .LVU9
  51              		.loc 1 1693 44 is_stmt 0 view .LVU10
  52 0014 031D     		adds	r3, r0, #4
  53              		.loc 1 1693 109 view .LVU11
  54 0016 062B     		cmp	r3, #6
  55 0018 0FD9     		bls	.L3
  56              		.loc 1 1693 109 discriminator 1 view .LVU12
  57 001a C31E     		subs	r3, r0, #3
  58              	.L2:
  59              	.LVL3:
1694:Drivers/CMSIS/Include/core_cm3.h **** 
1695:Drivers/CMSIS/Include/core_cm3.h ****   return (
  60              		.loc 1 1695 3 is_stmt 1 discriminator 4 view .LVU13
1696:Drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  61              		.loc 1 1696 30 is_stmt 0 discriminator 4 view .LVU14
  62 001c 4FF0FF3E 		mov	lr, #-1
  63 0020 0EFA0CF0 		lsl	r0, lr, ip
  64              	.LVL4:
  65              		.loc 1 1696 30 discriminator 4 view .LVU15
  66 0024 21EA0001 		bic	r1, r1, r0
  67              	.LVL5:
  68              		.loc 1 1696 82 discriminator 4 view .LVU16
  69 0028 9940     		lsls	r1, r1, r3
1697:Drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
  70              		.loc 1 1697 30 discriminator 4 view .LVU17
  71 002a 0EFA03FE 		lsl	lr, lr, r3
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 32


  72 002e 22EA0E02 		bic	r2, r2, lr
  73              	.LVL6:
1698:Drivers/CMSIS/Include/core_cm3.h ****          );
1699:Drivers/CMSIS/Include/core_cm3.h **** }
  74              		.loc 1 1699 1 discriminator 4 view .LVU18
  75 0032 41EA0200 		orr	r0, r1, r2
  76 0036 5DF804FB 		ldr	pc, [sp], #4
  77              	.LVL7:
  78              	.L3:
1693:Drivers/CMSIS/Include/core_cm3.h **** 
  79              		.loc 1 1693 109 view .LVU19
  80 003a 0023     		movs	r3, #0
  81 003c EEE7     		b	.L2
  82              		.cfi_endproc
  83              	.LFE55:
  85              		.section	.text.MX_DMA_Init,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	MX_DMA_Init:
  92              	.LFB712:
  93              		.file 2 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "cmsis_os.h"
  22:Src/main.c    **** 
  23:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  24:Src/main.c    **** /* USER CODE BEGIN Includes */
  25:Src/main.c    **** 
  26:Src/main.c    **** /* USER CODE END Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN PTD */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PD */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 33


  35:Src/main.c    **** /* USER CODE END PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PM */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Definitions for defaultTask */
  45:Src/main.c    **** osThreadId_t defaultTaskHandle;
  46:Src/main.c    **** const osThreadAttr_t defaultTask_attributes = {
  47:Src/main.c    ****   .name = "defaultTask",
  48:Src/main.c    ****   .stack_size = 128 * 4,
  49:Src/main.c    ****   .priority = (osPriority_t) osPriorityNormal,
  50:Src/main.c    **** };
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_DMA_Init(void);
  59:Src/main.c    **** static void MX_TIM2_Init(void);
  60:Src/main.c    **** static void MX_USART1_UART_Init(void);
  61:Src/main.c    **** static void MX_USART2_UART_Init(void);
  62:Src/main.c    **** void StartDefaultTask(void *argument);
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  69:Src/main.c    **** /* USER CODE BEGIN 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /**
  74:Src/main.c    ****   * @brief  The application entry point.
  75:Src/main.c    ****   * @retval int
  76:Src/main.c    ****   */
  77:Src/main.c    **** int main(void)
  78:Src/main.c    **** {
  79:Src/main.c    ****   /* USER CODE BEGIN 1 */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Src/main.c    ****   HAL_Init();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN Init */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END Init */
  91:Src/main.c    **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 34


  92:Src/main.c    ****   /* Configure the system clock */
  93:Src/main.c    ****   SystemClock_Config();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Initialize all configured peripherals */
 100:Src/main.c    ****   MX_GPIO_Init();
 101:Src/main.c    ****   MX_DMA_Init();
 102:Src/main.c    ****   MX_TIM2_Init();
 103:Src/main.c    ****   MX_USART1_UART_Init();
 104:Src/main.c    ****   MX_USART2_UART_Init();
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Init scheduler */
 110:Src/main.c    ****   osKernelInitialize();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 113:Src/main.c    ****   /* add mutexes, ... */
 114:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 117:Src/main.c    ****   /* add semaphores, ... */
 118:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 121:Src/main.c    ****   /* start timers, add new ones, ... */
 122:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 125:Src/main.c    ****   /* add queues, ... */
 126:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* Create the thread(s) */
 129:Src/main.c    ****   /* creation of defaultTask */
 130:Src/main.c    ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 133:Src/main.c    ****   /* add threads, ... */
 134:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 135:Src/main.c    **** 
 136:Src/main.c    ****   /* USER CODE BEGIN RTOS_EVENTS */
 137:Src/main.c    ****   /* add events, ... */
 138:Src/main.c    ****   /* USER CODE END RTOS_EVENTS */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Start scheduler */
 141:Src/main.c    ****   osKernelStart();
 142:Src/main.c    **** 
 143:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 144:Src/main.c    ****   /* Infinite loop */
 145:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 146:Src/main.c    ****   while (1)
 147:Src/main.c    ****   {
 148:Src/main.c    ****     /* USER CODE END WHILE */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 35


 149:Src/main.c    **** 
 150:Src/main.c    ****     /* USER CODE BEGIN 3 */
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /* USER CODE END 3 */
 153:Src/main.c    **** }
 154:Src/main.c    **** 
 155:Src/main.c    **** /**
 156:Src/main.c    ****   * @brief System Clock Configuration
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
 161:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 162:Src/main.c    ****   while(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)
 163:Src/main.c    ****   {
 164:Src/main.c    ****   }
 165:Src/main.c    ****   LL_RCC_HSI_SetCalibTrimming(16);
 166:Src/main.c    ****   LL_RCC_HSI_Enable();
 167:Src/main.c    **** 
 168:Src/main.c    ****    /* Wait till HSI is ready */
 169:Src/main.c    ****   while(LL_RCC_HSI_IsReady() != 1)
 170:Src/main.c    ****   {
 171:Src/main.c    **** 
 172:Src/main.c    ****   }
 173:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2, LL_RCC_PLL_MUL_16);
 174:Src/main.c    ****   LL_RCC_PLL_Enable();
 175:Src/main.c    **** 
 176:Src/main.c    ****    /* Wait till PLL is ready */
 177:Src/main.c    ****   while(LL_RCC_PLL_IsReady() != 1)
 178:Src/main.c    ****   {
 179:Src/main.c    **** 
 180:Src/main.c    ****   }
 181:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 182:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_2);
 183:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 184:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 185:Src/main.c    **** 
 186:Src/main.c    ****    /* Wait till System clock is ready */
 187:Src/main.c    ****   while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 188:Src/main.c    ****   {
 189:Src/main.c    **** 
 190:Src/main.c    ****   }
 191:Src/main.c    ****   LL_SetSystemCoreClock(64000000);
 192:Src/main.c    **** 
 193:Src/main.c    ****    /* Update the time base */
 194:Src/main.c    ****   if (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)
 195:Src/main.c    ****   {
 196:Src/main.c    ****     Error_Handler();
 197:Src/main.c    ****   }
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /**
 201:Src/main.c    ****   * @brief TIM2 Initialization Function
 202:Src/main.c    ****   * @param None
 203:Src/main.c    ****   * @retval None
 204:Src/main.c    ****   */
 205:Src/main.c    **** static void MX_TIM2_Init(void)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 36


 206:Src/main.c    **** {
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 211:Src/main.c    **** 
 212:Src/main.c    ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
 213:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 214:Src/main.c    **** 
 215:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* Peripheral clock enable */
 218:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM2);
 219:Src/main.c    **** 
 220:Src/main.c    ****   /* TIM2 interrupt Init */
 221:Src/main.c    ****   NVIC_SetPriority(TIM2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),5, 0));
 222:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 227:Src/main.c    ****   TIM_InitStruct.Prescaler = 1;
 228:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 229:Src/main.c    ****   TIM_InitStruct.Autoreload = 64-LL_TIM_IC_FILTER_FDIV1_N2;
 230:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 231:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 232:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM2);
 233:Src/main.c    ****   LL_TIM_SetClockSource(TIM2, LL_TIM_CLOCKSOURCE_INTERNAL);
 234:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_TOGGLE;
 235:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 236:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 237:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 0;
 238:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 239:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 240:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM2, LL_TIM_CHANNEL_CH2);
 241:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM2, LL_TIM_TRGO_RESET);
 242:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM2);
 243:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 246:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 247:Src/main.c    ****   /**TIM2 GPIO Configuration
 248:Src/main.c    ****   PA1   ------> TIM2_CH2
 249:Src/main.c    ****   */
 250:Src/main.c    ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_1;
 251:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 252:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 253:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 254:Src/main.c    ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 255:Src/main.c    **** 
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /**
 259:Src/main.c    ****   * @brief USART1 Initialization Function
 260:Src/main.c    ****   * @param None
 261:Src/main.c    ****   * @retval None
 262:Src/main.c    ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 37


 263:Src/main.c    **** static void MX_USART1_UART_Init(void)
 264:Src/main.c    **** {
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 269:Src/main.c    **** 
 270:Src/main.c    ****   LL_USART_InitTypeDef USART_InitStruct = {0};
 271:Src/main.c    **** 
 272:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* Peripheral clock enable */
 275:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_USART1);
 276:Src/main.c    **** 
 277:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 278:Src/main.c    ****   /**USART1 GPIO Configuration
 279:Src/main.c    ****   PA9   ------> USART1_TX
 280:Src/main.c    ****   PA10   ------> USART1_RX
 281:Src/main.c    ****   */
 282:Src/main.c    ****   GPIO_InitStruct.Pin = XCVR_DI_Pin;
 283:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 284:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 285:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 286:Src/main.c    ****   LL_GPIO_Init(XCVR_DI_GPIO_Port, &GPIO_InitStruct);
 287:Src/main.c    **** 
 288:Src/main.c    ****   GPIO_InitStruct.Pin = XCVR_RO_Pin;
 289:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 290:Src/main.c    ****   LL_GPIO_Init(XCVR_RO_GPIO_Port, &GPIO_InitStruct);
 291:Src/main.c    **** 
 292:Src/main.c    ****   /* USART1 interrupt Init */
 293:Src/main.c    ****   NVIC_SetPriority(USART1_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),5, 0));
 294:Src/main.c    ****   NVIC_EnableIRQ(USART1_IRQn);
 295:Src/main.c    **** 
 296:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 299:Src/main.c    ****   USART_InitStruct.BaudRate = 115200;
 300:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 301:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 302:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 303:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 304:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 305:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 306:Src/main.c    ****   LL_USART_Init(USART1, &USART_InitStruct);
 307:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART1);
 308:Src/main.c    ****   LL_USART_Enable(USART1);
 309:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 312:Src/main.c    **** 
 313:Src/main.c    **** }
 314:Src/main.c    **** 
 315:Src/main.c    **** /**
 316:Src/main.c    ****   * @brief USART2 Initialization Function
 317:Src/main.c    ****   * @param None
 318:Src/main.c    ****   * @retval None
 319:Src/main.c    ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 38


 320:Src/main.c    **** static void MX_USART2_UART_Init(void)
 321:Src/main.c    **** {
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   LL_USART_InitTypeDef USART_InitStruct = {0};
 328:Src/main.c    **** 
 329:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* Peripheral clock enable */
 332:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
 333:Src/main.c    **** 
 334:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 335:Src/main.c    ****   /**USART2 GPIO Configuration
 336:Src/main.c    ****   PA2   ------> USART2_TX
 337:Src/main.c    ****   PA3   ------> USART2_RX
 338:Src/main.c    ****   */
 339:Src/main.c    ****   GPIO_InitStruct.Pin = DBG_TX_Pin;
 340:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 341:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 342:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 343:Src/main.c    ****   LL_GPIO_Init(DBG_TX_GPIO_Port, &GPIO_InitStruct);
 344:Src/main.c    **** 
 345:Src/main.c    ****   GPIO_InitStruct.Pin = DBG_RX_Pin;
 346:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 347:Src/main.c    ****   LL_GPIO_Init(DBG_RX_GPIO_Port, &GPIO_InitStruct);
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USART2 DMA Init */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USART2_RX Init */
 352:Src/main.c    ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_6, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 353:Src/main.c    **** 
 354:Src/main.c    ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_6, LL_DMA_PRIORITY_LOW);
 355:Src/main.c    **** 
 356:Src/main.c    ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_6, LL_DMA_MODE_NORMAL);
 357:Src/main.c    **** 
 358:Src/main.c    ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_6, LL_DMA_PERIPH_NOINCREMENT);
 359:Src/main.c    **** 
 360:Src/main.c    ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_6, LL_DMA_MEMORY_INCREMENT);
 361:Src/main.c    **** 
 362:Src/main.c    ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_6, LL_DMA_PDATAALIGN_BYTE);
 363:Src/main.c    **** 
 364:Src/main.c    ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_6, LL_DMA_MDATAALIGN_BYTE);
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* USART2 interrupt Init */
 367:Src/main.c    ****   NVIC_SetPriority(USART2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),5, 0));
 368:Src/main.c    ****   NVIC_EnableIRQ(USART2_IRQn);
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 373:Src/main.c    ****   USART_InitStruct.BaudRate = 115200;
 374:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 375:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 376:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 39


 377:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 378:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 379:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 380:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 381:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART2);
 382:Src/main.c    ****   LL_USART_Enable(USART2);
 383:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 386:Src/main.c    **** 
 387:Src/main.c    **** }
 388:Src/main.c    **** 
 389:Src/main.c    **** /**
 390:Src/main.c    ****   * Enable DMA controller clock
 391:Src/main.c    ****   */
 392:Src/main.c    **** static void MX_DMA_Init(void)
 393:Src/main.c    **** {
  94              		.loc 2 393 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 00B5     		push	{lr}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 14, -4
 102 0002 83B0     		sub	sp, sp, #12
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 16
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* Init with LL driver */
 396:Src/main.c    ****   /* DMA controller clock enable */
 397:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
 105              		.loc 2 397 3 view .LVU21
 106              	.LVL8:
 107              	.LBB112:
 108              	.LBI112:
 109              		.file 3 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @file    stm32f1xx_ll_bus.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 40


  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifndef __STM32F1xx_LL_BUS_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define __STM32F1xx_LL_BUS_H
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #include "stm32f1xx.h"
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @addtogroup STM32F1xx_LL_Driver
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_OTGFSRST) || defined(RCC_AHBRSTR_ETHMACRST)
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define RCC_AHBRSTR_SUPPORT
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_OTGFSRST || RCC_AHBRSTR_ETHMACRST */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 41


  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DMA2)
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DMA2*/
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ETH)
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMAC         RCC_AHBENR_ETHMACEN
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACRX       RCC_AHBENR_ETHMACRXEN
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACTX       RCC_AHBENR_ETHMACTXEN
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ETH*/
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(FSMC_Bank1)
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FSMC           RCC_AHBENR_FSMCEN
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*FSMC_Bank1*/
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB_OTG_FS)
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGFS          RCC_AHBENR_OTGFSEN
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB_OTG_FS*/
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SDIO)
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SDIO           RCC_AHBENR_SDIOEN
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SDIO*/
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_BKP            RCC_APB1ENR_BKPEN
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN1)
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR_CAN1EN
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN1*/
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN2)
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR_CAN2EN
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN2*/
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CEC)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CEC*/
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DAC)
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DAC*/
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(I2C2)
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*I2C2*/
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI2)
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI2*/
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI3)
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI3*/
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM12)
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM12          RCC_APB1ENR_TIM12EN
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM12*/
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM13)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 42


 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM13          RCC_APB1ENR_TIM13EN
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM13*/
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM14)
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM14*/
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM4)
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM4*/
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM5)
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM5*/
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM6)
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM6*/
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM7)
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM7*/
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART4)
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART4*/
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART5)
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART5*/
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USART3)
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USART3*/
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB)
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB*/
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC2)
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC2           RCC_APB2ENR_ADC2EN
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC2*/
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC3)
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC3           RCC_APB2ENR_ADC3EN
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC3*/
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_AFIO           RCC_APB2ENR_AFIOEN
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOA          RCC_APB2ENR_IOPAEN
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOB          RCC_APB2ENR_IOPBEN
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOC          RCC_APB2ENR_IOPCEN
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOD          RCC_APB2ENR_IOPDEN
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOE)
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOE          RCC_APB2ENR_IOPEEN
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOE*/
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOF)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 43


 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOF          RCC_APB2ENR_IOPFEN
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOF*/
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOG)
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOG          RCC_APB2ENR_IOPGEN
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOG*/
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM10)
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10          RCC_APB2ENR_TIM10EN
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM10*/
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM11)
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11          RCC_APB2ENR_TIM11EN
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM11*/
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM15)
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM15*/
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM16)
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM16*/
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM17)
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM17*/
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM8)
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM8*/
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM9)
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9           RCC_APB2ENR_TIM9EN
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM9*/
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_EnableClock\n
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_EnableClock\n
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_EnableClock\n
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 44


 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_EnableClock\n
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_EnableClock\n
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_EnableClock\n
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 110              		.loc 3 269 22 view .LVU22
 111              	.LBB113:
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 112              		.loc 3 271 3 view .LVU23
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 113              		.loc 3 272 3 view .LVU24
 114 0004 0E4B     		ldr	r3, .L7
 115 0006 5A69     		ldr	r2, [r3, #20]
 116 0008 42F00102 		orr	r2, r2, #1
 117 000c 5A61     		str	r2, [r3, #20]
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 118              		.loc 3 274 3 view .LVU25
 119              		.loc 3 274 12 is_stmt 0 view .LVU26
 120 000e 5B69     		ldr	r3, [r3, #20]
 121 0010 03F00103 		and	r3, r3, #1
 122              		.loc 3 274 10 view .LVU27
 123 0014 0193     		str	r3, [sp, #4]
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 124              		.loc 3 275 3 is_stmt 1 view .LVU28
 125 0016 019B     		ldr	r3, [sp, #4]
 126              	.LVL9:
 127              		.loc 3 275 3 is_stmt 0 view .LVU29
 128              	.LBE113:
 129              	.LBE112:
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* DMA interrupt init */
 400:Src/main.c    ****   /* DMA1_Channel6_IRQn interrupt configuration */
 401:Src/main.c    ****   NVIC_SetPriority(DMA1_Channel6_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(),5, 0));
 130              		.loc 2 401 3 is_stmt 1 view .LVU30
 131              	.LBB114:
 132              	.LBI114:
1499:Drivers/CMSIS/Include/core_cm3.h **** {
 133              		.loc 1 1499 26 view .LVU31
 134              	.LBB115:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 45


1501:Drivers/CMSIS/Include/core_cm3.h **** }
 135              		.loc 1 1501 3 view .LVU32
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 136              		.loc 1 1501 26 is_stmt 0 view .LVU33
 137 0018 0A4B     		ldr	r3, .L7+4
 138 001a D868     		ldr	r0, [r3, #12]
 139              	.LBE115:
 140              	.LBE114:
 141              		.loc 2 401 3 view .LVU34
 142 001c 0022     		movs	r2, #0
 143 001e 0521     		movs	r1, #5
 144 0020 C0F30220 		ubfx	r0, r0, #8, #3
 145 0024 FFF7FEFF 		bl	NVIC_EncodePriority
 146              	.LVL10:
 147              	.LBB116:
 148              	.LBI116:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 149              		.loc 1 1639 22 is_stmt 1 view .LVU35
 150              	.LBB117:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
 151              		.loc 1 1641 3 view .LVU36
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 152              		.loc 1 1643 5 view .LVU37
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 153              		.loc 1 1643 48 is_stmt 0 view .LVU38
 154 0028 0001     		lsls	r0, r0, #4
 155              	.LVL11:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 156              		.loc 1 1643 48 view .LVU39
 157 002a C0B2     		uxtb	r0, r0
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 158              		.loc 1 1643 46 view .LVU40
 159 002c 064B     		ldr	r3, .L7+8
 160 002e 83F81003 		strb	r0, [r3, #784]
 161              	.LVL12:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 162              		.loc 1 1643 46 view .LVU41
 163              	.LBE117:
 164              	.LBE116:
 402:Src/main.c    ****   NVIC_EnableIRQ(DMA1_Channel6_IRQn);
 165              		.loc 2 402 3 is_stmt 1 view .LVU42
 166              	.LBB118:
 167              	.LBI118:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 168              		.loc 1 1511 22 view .LVU43
 169              	.LBB119:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 170              		.loc 1 1513 3 view .LVU44
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 171              		.loc 1 1515 5 view .LVU45
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 172              		.loc 1 1515 43 is_stmt 0 view .LVU46
 173 0032 4FF48032 		mov	r2, #65536
 174 0036 1A60     		str	r2, [r3]
 175              	.LVL13:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 176              		.loc 1 1515 43 view .LVU47
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 46


 177              	.LBE119:
 178              	.LBE118:
 403:Src/main.c    **** 
 404:Src/main.c    **** }
 179              		.loc 2 404 1 view .LVU48
 180 0038 03B0     		add	sp, sp, #12
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 4
 183              		@ sp needed
 184 003a 5DF804FB 		ldr	pc, [sp], #4
 185              	.L8:
 186 003e 00BF     		.align	2
 187              	.L7:
 188 0040 00100240 		.word	1073876992
 189 0044 00ED00E0 		.word	-536810240
 190 0048 00E100E0 		.word	-536813312
 191              		.cfi_endproc
 192              	.LFE712:
 194              		.section	.text.MX_GPIO_Init,"ax",%progbits
 195              		.align	1
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	MX_GPIO_Init:
 201              	.LFB713:
 405:Src/main.c    **** 
 406:Src/main.c    **** /**
 407:Src/main.c    ****   * @brief GPIO Initialization Function
 408:Src/main.c    ****   * @param None
 409:Src/main.c    ****   * @retval None
 410:Src/main.c    ****   */
 411:Src/main.c    **** static void MX_GPIO_Init(void)
 412:Src/main.c    **** {
 202              		.loc 2 412 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 32
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 24
 209              		.cfi_offset 4, -24
 210              		.cfi_offset 5, -20
 211              		.cfi_offset 6, -16
 212              		.cfi_offset 7, -12
 213              		.cfi_offset 8, -8
 214              		.cfi_offset 14, -4
 215 0004 88B0     		sub	sp, sp, #32
 216              	.LCFI5:
 217              		.cfi_def_cfa_offset 56
 413:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 218              		.loc 2 413 3 view .LVU50
 219              		.loc 2 413 23 is_stmt 0 view .LVU51
 220 0006 0024     		movs	r4, #0
 221 0008 0394     		str	r4, [sp, #12]
 222 000a 0494     		str	r4, [sp, #16]
 223 000c 0594     		str	r4, [sp, #20]
 224 000e 0694     		str	r4, [sp, #24]
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 47


 225 0010 0794     		str	r4, [sp, #28]
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* GPIO Ports Clock Enable */
 416:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOC);
 226              		.loc 2 416 3 is_stmt 1 view .LVU52
 227              	.LVL14:
 228              	.LBB120:
 229              	.LBI120:
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_IsEnabledClock\n
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_IsEnabledClock\n
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_IsEnabledClock\n
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_IsEnabledClock\n
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_IsEnabledClock\n
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_IsEnabledClock\n
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_DisableClock\n
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_DisableClock\n
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_DisableClock\n
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 48


 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_SUPPORT)
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ForceReset\n
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ForceReset
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ReleaseReset\n
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ReleaseReset
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_SUPPORT */
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 49


 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_EnableClock\n
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 50


 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_IsEnabledClock\n
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_IsEnabledClock\n
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_IsEnabledClock\n
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_IsEnabledClock\n
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 51


 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_DisableClock\n
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_DisableClock\n
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_DisableClock\n
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock\n
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_DisableClock\n
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_DisableClock\n
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_DisableClock\n
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_DisableClock\n
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_DisableClock\n
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_DisableClock\n
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_DisableClock\n
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 52


 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ForceReset\n
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ForceReset\n
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ForceReset\n
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset\n
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ForceReset\n
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ForceReset\n
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ForceReset\n
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ForceReset\n
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ForceReset\n
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ForceReset\n
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ForceReset\n
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 53


 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ReleaseReset\n
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ReleaseReset\n
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ReleaseReset\n
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset\n
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ReleaseReset\n
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ReleaseReset\n
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ReleaseReset\n
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ReleaseReset\n
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ReleaseReset\n
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ReleaseReset\n
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ReleaseReset\n
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 54


 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB2ENR      ADC1EN        LL_APB2_GRP1_EnableClock\n
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC2EN        LL_APB2_GRP1_EnableClock\n
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC3EN        LL_APB2_GRP1_EnableClock\n
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      AFIOEN        LL_APB2_GRP1_EnableClock\n
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPAEN        LL_APB2_GRP1_EnableClock\n
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPBEN        LL_APB2_GRP1_EnableClock\n
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPCEN        LL_APB2_GRP1_EnableClock\n
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPDEN        LL_APB2_GRP1_EnableClock\n
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 55


 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPEEN        LL_APB2_GRP1_EnableClock\n
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPFEN        LL_APB2_GRP1_EnableClock\n
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPGEN        LL_APB2_GRP1_EnableClock\n
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM10EN       LL_APB2_GRP1_EnableClock\n
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM11EN       LL_APB2_GRP1_EnableClock\n
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB2_GRP1_EnableClock\n
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM8EN        LL_APB2_GRP1_EnableClock\n
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM9EN        LL_APB2_GRP1_EnableClock\n
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC2 (*)
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC3 (*)
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_AFIO
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOA
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOB
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOC
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOD
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOE (*)
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOF (*)
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOG (*)
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10 (*)
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11 (*)
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16 (*)
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17 (*)
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8 (*)
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9 (*)
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 230              		.loc 3 763 22 view .LVU53
 231              	.LBB121:
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 232              		.loc 3 765 3 view .LVU54
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 233              		.loc 3 766 3 view .LVU55
 234 0012 2A4B     		ldr	r3, .L11
 235 0014 9A69     		ldr	r2, [r3, #24]
 236 0016 42F01002 		orr	r2, r2, #16
 237 001a 9A61     		str	r2, [r3, #24]
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 238              		.loc 3 768 3 view .LVU56
 239              		.loc 3 768 12 is_stmt 0 view .LVU57
 240 001c 9A69     		ldr	r2, [r3, #24]
 241 001e 02F01002 		and	r2, r2, #16
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 56


 242              		.loc 3 768 10 view .LVU58
 243 0022 0292     		str	r2, [sp, #8]
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 244              		.loc 3 769 3 is_stmt 1 view .LVU59
 245 0024 029A     		ldr	r2, [sp, #8]
 246              	.LVL15:
 247              		.loc 3 769 3 is_stmt 0 view .LVU60
 248              	.LBE121:
 249              	.LBE120:
 417:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 250              		.loc 2 417 3 is_stmt 1 view .LVU61
 251              	.LBB122:
 252              	.LBI122:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 253              		.loc 3 763 22 view .LVU62
 254              	.LBB123:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 255              		.loc 3 765 3 view .LVU63
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 256              		.loc 3 766 3 view .LVU64
 257 0026 9A69     		ldr	r2, [r3, #24]
 258 0028 42F00402 		orr	r2, r2, #4
 259 002c 9A61     		str	r2, [r3, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 260              		.loc 3 768 3 view .LVU65
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 261              		.loc 3 768 12 is_stmt 0 view .LVU66
 262 002e 9A69     		ldr	r2, [r3, #24]
 263 0030 02F00402 		and	r2, r2, #4
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 264              		.loc 3 768 10 view .LVU67
 265 0034 0192     		str	r2, [sp, #4]
 266              		.loc 3 769 3 is_stmt 1 view .LVU68
 267 0036 019A     		ldr	r2, [sp, #4]
 268              	.LVL16:
 269              		.loc 3 769 3 is_stmt 0 view .LVU69
 270              	.LBE123:
 271              	.LBE122:
 418:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOB);
 272              		.loc 2 418 3 is_stmt 1 view .LVU70
 273              	.LBB124:
 274              	.LBI124:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 275              		.loc 3 763 22 view .LVU71
 276              	.LBB125:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 277              		.loc 3 765 3 view .LVU72
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 278              		.loc 3 766 3 view .LVU73
 279 0038 9A69     		ldr	r2, [r3, #24]
 280 003a 42F00802 		orr	r2, r2, #8
 281 003e 9A61     		str	r2, [r3, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 282              		.loc 3 768 3 view .LVU74
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 283              		.loc 3 768 12 is_stmt 0 view .LVU75
 284 0040 9B69     		ldr	r3, [r3, #24]
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 57


 285 0042 03F00803 		and	r3, r3, #8
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 286              		.loc 3 768 10 view .LVU76
 287 0046 0093     		str	r3, [sp]
 288              		.loc 3 769 3 is_stmt 1 view .LVU77
 289 0048 009B     		ldr	r3, [sp]
 290              	.LVL17:
 291              		.loc 3 769 3 is_stmt 0 view .LVU78
 292              	.LBE125:
 293              	.LBE124:
 419:Src/main.c    **** 
 420:Src/main.c    ****   /**/
 421:Src/main.c    ****   LL_GPIO_ResetOutputPin(DEVBOARD_LED_GPIO_Port, DEVBOARD_LED_Pin);
 294              		.loc 2 421 3 is_stmt 1 view .LVU79
 295              	.LBB126:
 296              	.LBI126:
 297              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @file    stm32f1xx_ll_gpio.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifndef STM32F1xx_LL_GPIO_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define STM32F1xx_LL_GPIO_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 58


  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Constants GPIO Private Constants
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Defines used for Pin Mask Initialization */
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_MASK_POS   8U
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_NB         16U
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** typedef struct
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 59


  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_0                    ((GPIO_BSRR_BS0  << GPIO_PIN_MASK_POS) | 0x00000001U)  /*!
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_1                    ((GPIO_BSRR_BS1  << GPIO_PIN_MASK_POS) | 0x00000002U)  /*!
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_2                    ((GPIO_BSRR_BS2  << GPIO_PIN_MASK_POS) | 0x00000004U)  /*!
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_3                    ((GPIO_BSRR_BS3  << GPIO_PIN_MASK_POS) | 0x00000008U)  /*!
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_4                    ((GPIO_BSRR_BS4  << GPIO_PIN_MASK_POS) | 0x00000010U)  /*!
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_5                    ((GPIO_BSRR_BS5  << GPIO_PIN_MASK_POS) | 0x00000020U)  /*!
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_6                    ((GPIO_BSRR_BS6  << GPIO_PIN_MASK_POS) | 0x00000040U)  /*!
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_7                    ((GPIO_BSRR_BS7  << GPIO_PIN_MASK_POS) | 0x00000080U)  /*!
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_8                    ((GPIO_BSRR_BS8  << GPIO_PIN_MASK_POS) | 0x04000001U)  /*!
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_9                    ((GPIO_BSRR_BS9  << GPIO_PIN_MASK_POS) | 0x04000002U)  /*!
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_10                   ((GPIO_BSRR_BS10 << GPIO_PIN_MASK_POS) | 0x04000004U)  /*!
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_11                   ((GPIO_BSRR_BS11 << GPIO_PIN_MASK_POS) | 0x04000008U)  /*!
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_12                   ((GPIO_BSRR_BS12 << GPIO_PIN_MASK_POS) | 0x04000010U)  /*!
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_13                   ((GPIO_BSRR_BS13 << GPIO_PIN_MASK_POS) | 0x04000020U)  /*!
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_14                   ((GPIO_BSRR_BS14 << GPIO_PIN_MASK_POS) | 0x04000040U)  /*!
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_15                   ((GPIO_BSRR_BS15 << GPIO_PIN_MASK_POS) | 0x04000080U)  /*!
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                  (LL_GPIO_PIN_0  | LL_GPIO_PIN_1  | LL_GPIO_PIN_2  | \
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_3  | LL_GPIO_PIN_4  | LL_GPIO_PIN_5  | \
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_6  | LL_GPIO_PIN_7  | LL_GPIO_PIN_8  | \
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_9  | LL_GPIO_PIN_10 | LL_GPIO_PIN_11 | \
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_12 | LL_GPIO_PIN_13 | LL_GPIO_PIN_14 | \
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_15)                                      /*!<
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG              0x00000000U       /*!< Select analog mode */
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_FLOATING            GPIO_CRL_CNF0_0   /*!< Select floating mode */
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT               GPIO_CRL_CNF0_1   /*!< Select input mode */
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT              GPIO_CRL_MODE0_0  /*!< Select general purpose output mode 
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE           (GPIO_CRL_CNF0_1 | GPIO_CRL_MODE0_0) /*!< Select alternate
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 60


 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL          0x00000000U                /*!< Select push-pull as output
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN         GPIO_CRL_CNF0_0            /*!< Select open-drain as outpu
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_10MHz        GPIO_CRL_MODE0_0            /*!< Select Output mode, max s
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_2MHz         GPIO_CRL_MODE0_1            /*!< Select Output mode, max s
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_50MHz        GPIO_CRL_MODE0              /*!< Select Output mode, max s
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW           LL_GPIO_MODE_OUTPUT_2MHz    /*!< Select I/O low output spe
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM        LL_GPIO_MODE_OUTPUT_10MHz   /*!< Select I/O medium output 
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH          LL_GPIO_MODE_OUTPUT_50MHz   /*!< Select I/O high output sp
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                0x00000000U    /*!< Select I/O pull down */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                  GPIO_ODR_ODR0  /*!< Select I/O pull up */
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PIN EVENTOUT Pin
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_0        AFIO_EVCR_PIN_PX0   /*!< EVENTOUT on pin 0 */
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_1        AFIO_EVCR_PIN_PX1   /*!< EVENTOUT on pin 1 */
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_2        AFIO_EVCR_PIN_PX2   /*!< EVENTOUT on pin 2 */
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_3        AFIO_EVCR_PIN_PX3   /*!< EVENTOUT on pin 3 */
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_4        AFIO_EVCR_PIN_PX4   /*!< EVENTOUT on pin 4 */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_5        AFIO_EVCR_PIN_PX5   /*!< EVENTOUT on pin 5 */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_6        AFIO_EVCR_PIN_PX6   /*!< EVENTOUT on pin 6 */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_7        AFIO_EVCR_PIN_PX7   /*!< EVENTOUT on pin 7 */
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_8        AFIO_EVCR_PIN_PX8   /*!< EVENTOUT on pin 8 */
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_9        AFIO_EVCR_PIN_PX9   /*!< EVENTOUT on pin 9 */
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_10       AFIO_EVCR_PIN_PX10  /*!< EVENTOUT on pin 10 */
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_11       AFIO_EVCR_PIN_PX11  /*!< EVENTOUT on pin 11 */
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_12       AFIO_EVCR_PIN_PX12  /*!< EVENTOUT on pin 12 */
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_13       AFIO_EVCR_PIN_PX13  /*!< EVENTOUT on pin 13 */
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_14       AFIO_EVCR_PIN_PX14  /*!< EVENTOUT on pin 14 */
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_15       AFIO_EVCR_PIN_PX15  /*!< EVENTOUT on pin 15 */
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PORT EVENTOUT Port
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 61


 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_A       AFIO_EVCR_PORT_PA  /*!< EVENTOUT on port A */
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_B       AFIO_EVCR_PORT_PB  /*!< EVENTOUT on port B */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_C       AFIO_EVCR_PORT_PC  /*!< EVENTOUT on port C */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_D       AFIO_EVCR_PORT_PD  /*!< EVENTOUT on port D */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_E       AFIO_EVCR_PORT_PE  /*!< EVENTOUT on port E */
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_PORT GPIO EXTI PORT
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTA            0U   /*!< EXTI PORT A */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTB            1U   /*!< EXTI PORT B */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTC            2U   /*!< EXTI PORT C */
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTD            3U   /*!< EXTI PORT D */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTE            4U   /*!< EXTI PORT E */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTF            5U   /*!< EXTI PORT F */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTG            6U   /*!< EXTI PORT G */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_LINE GPIO EXTI LINE
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE0            (0x000FU << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTICR[0] *
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE1            (0x00F0U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTICR[0] *
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE2            (0x0F00U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTICR[0] *
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE3            (0xF000U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXTICR[0] *
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE4            (0x000FU << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTICR[1] *
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE5            (0x00F0U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTICR[1] *
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE6            (0x0F00U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTICR[1] *
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE7            (0xF000U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXTICR[1] *
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE8            (0x000FU << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTICR[2] *
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE9            (0x00F0U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTICR[2] *
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE10           (0x0F00U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTICR[2] *
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE11           (0xF000U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXTICR[2] *
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE12           (0x000FU << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTICR[3] *
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE13           (0x00F0U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTICR[3] *
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE14           (0x0F00U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTICR[3] *
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE15           (0xF000U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXTICR[3] *
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 62


 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Register value
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_SetPinMode
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_SetPinMode
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_SetPinMode
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_SetPinMode
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 63


 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U)), (Mode << (POSIT
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_GetPinMode
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_GetPinMode
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_GetPinMode
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_GetPinMode
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 64


 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U))) >> (POSIT
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium or Fast speed.
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_SetPinSpeed
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_SetPinSpeed
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U)),
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 4U)));
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_GetPinSpeed
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_GetPinSpeed
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 65


 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U)
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy           LL_GPIO_SetPinOutputType
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy           LL_GPIO_SetPinOutputType
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be a combination of the following values:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t OutputTyp
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 66


 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U)),
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (OutputType << (POSITION_VAL(Pin) * 4U)));
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy       LL_GPIO_GetPinOutputType
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy       LL_GPIO_GetPinOutputType
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&GPIOx->CRL) + (Pin >> 24)));
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_SetPinPull
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 67


 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(GPIOx->ODR, (Pin >> GPIO_PIN_MASK_POS), Pull << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_GetPinPull
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (GPIO_ODR_ODR0 << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS)))) >> (POS
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         next reset.
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         (control and alternate function registers).
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 68


 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   __IO uint32_t temp;
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   (void) temp;
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU)) == ((PinMask >> GPI
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 69


 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Input data register value of port
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_REG(GPIOx->IDR));
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 70


 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Output data register value of port
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 71


 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 298              		.loc 4 833 22 view .LVU80
 299              	.LBB127:
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 300              		.loc 4 835 3 view .LVU81
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 72


 301 004a 1D48     		ldr	r0, .L11+4
 302 004c 4FF40053 		mov	r3, #8192
 303 0050 4361     		str	r3, [r0, #20]
 304              	.LVL18:
 305              		.loc 4 835 3 is_stmt 0 view .LVU82
 306              	.LBE127:
 307              	.LBE126:
 422:Src/main.c    **** 
 423:Src/main.c    ****   /**/
 424:Src/main.c    ****   LL_GPIO_ResetOutputPin(DATA_GPIO_Port, DATA_Pin);
 308              		.loc 2 424 3 is_stmt 1 view .LVU83
 309              	.LBB128:
 310              	.LBI128:
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 311              		.loc 4 833 22 view .LVU84
 312              	.LBB129:
 313              		.loc 4 835 3 view .LVU85
 314 0052 1C4E     		ldr	r6, .L11+8
 315 0054 0125     		movs	r5, #1
 316 0056 7561     		str	r5, [r6, #20]
 317              	.LVL19:
 318              		.loc 4 835 3 is_stmt 0 view .LVU86
 319              	.LBE129:
 320              	.LBE128:
 425:Src/main.c    **** 
 426:Src/main.c    ****   /**/
 427:Src/main.c    ****   LL_GPIO_ResetOutputPin(XCVR_EN_GPIO_Port, XCVR_EN_Pin);
 321              		.loc 2 427 3 is_stmt 1 view .LVU87
 322              	.LBB130:
 323              	.LBI130:
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 324              		.loc 4 833 22 view .LVU88
 325              	.LBB131:
 326              		.loc 4 835 3 view .LVU89
 327 0058 DFF86C80 		ldr	r8, .L11+12
 328 005c 4FF40063 		mov	r3, #2048
 329 0060 C8F81430 		str	r3, [r8, #20]
 330              	.LVL20:
 331              		.loc 4 835 3 is_stmt 0 view .LVU90
 332              	.LBE131:
 333              	.LBE130:
 428:Src/main.c    **** 
 429:Src/main.c    ****   /**/
 430:Src/main.c    ****   LL_GPIO_SetOutputPin(GPIOB, LED1_IO_Pin|LED2_IO_Pin);
 334              		.loc 2 430 3 is_stmt 1 view .LVU91
 335              	.LBB132:
 336              	.LBI132:
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 337              		.loc 4 804 22 view .LVU92
 338              	.LBB133:
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 339              		.loc 4 806 3 view .LVU93
 340 0064 4FF44043 		mov	r3, #49152
 341 0068 3361     		str	r3, [r6, #16]
 342              	.LVL21:
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 343              		.loc 4 806 3 is_stmt 0 view .LVU94
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 73


 344              	.LBE133:
 345              	.LBE132:
 431:Src/main.c    **** 
 432:Src/main.c    ****   /**/
 433:Src/main.c    ****   GPIO_InitStruct.Pin = DEVBOARD_LED_Pin;
 346              		.loc 2 433 3 is_stmt 1 view .LVU95
 347              		.loc 2 433 23 is_stmt 0 view .LVU96
 348 006a 184B     		ldr	r3, .L11+16
 349 006c 0393     		str	r3, [sp, #12]
 434:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 350              		.loc 2 434 3 is_stmt 1 view .LVU97
 351              		.loc 2 434 24 is_stmt 0 view .LVU98
 352 006e 0495     		str	r5, [sp, #16]
 435:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 353              		.loc 2 435 3 is_stmt 1 view .LVU99
 354              		.loc 2 435 25 is_stmt 0 view .LVU100
 355 0070 0227     		movs	r7, #2
 356 0072 0597     		str	r7, [sp, #20]
 436:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 357              		.loc 2 436 3 is_stmt 1 view .LVU101
 437:Src/main.c    ****   LL_GPIO_Init(DEVBOARD_LED_GPIO_Port, &GPIO_InitStruct);
 358              		.loc 2 437 3 view .LVU102
 359 0074 03A9     		add	r1, sp, #12
 360 0076 FFF7FEFF 		bl	LL_GPIO_Init
 361              	.LVL22:
 438:Src/main.c    **** 
 439:Src/main.c    ****   /**/
 440:Src/main.c    ****   GPIO_InitStruct.Pin = DATA_Pin;
 362              		.loc 2 440 3 view .LVU103
 363              		.loc 2 440 23 is_stmt 0 view .LVU104
 364 007a 40F20113 		movw	r3, #257
 365 007e 0393     		str	r3, [sp, #12]
 441:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 366              		.loc 2 441 3 is_stmt 1 view .LVU105
 367              		.loc 2 441 24 is_stmt 0 view .LVU106
 368 0080 0495     		str	r5, [sp, #16]
 442:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 369              		.loc 2 442 3 is_stmt 1 view .LVU107
 370              		.loc 2 442 25 is_stmt 0 view .LVU108
 371 0082 0323     		movs	r3, #3
 372 0084 0593     		str	r3, [sp, #20]
 443:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 373              		.loc 2 443 3 is_stmt 1 view .LVU109
 374              		.loc 2 443 30 is_stmt 0 view .LVU110
 375 0086 0694     		str	r4, [sp, #24]
 444:Src/main.c    ****   LL_GPIO_Init(DATA_GPIO_Port, &GPIO_InitStruct);
 376              		.loc 2 444 3 is_stmt 1 view .LVU111
 377 0088 03A9     		add	r1, sp, #12
 378 008a 3046     		mov	r0, r6
 379 008c FFF7FEFF 		bl	LL_GPIO_Init
 380              	.LVL23:
 445:Src/main.c    **** 
 446:Src/main.c    ****   /**/
 447:Src/main.c    ****   GPIO_InitStruct.Pin = LED1_IO_Pin|LED2_IO_Pin;
 381              		.loc 2 447 3 view .LVU112
 382              		.loc 2 447 23 is_stmt 0 view .LVU113
 383 0090 0F4B     		ldr	r3, .L11+20
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 74


 384 0092 0393     		str	r3, [sp, #12]
 448:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 385              		.loc 2 448 3 is_stmt 1 view .LVU114
 386              		.loc 2 448 24 is_stmt 0 view .LVU115
 387 0094 0495     		str	r5, [sp, #16]
 449:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 388              		.loc 2 449 3 is_stmt 1 view .LVU116
 389              		.loc 2 449 25 is_stmt 0 view .LVU117
 390 0096 0597     		str	r7, [sp, #20]
 450:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 391              		.loc 2 450 3 is_stmt 1 view .LVU118
 392              		.loc 2 450 30 is_stmt 0 view .LVU119
 393 0098 0423     		movs	r3, #4
 394 009a 0693     		str	r3, [sp, #24]
 451:Src/main.c    ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 395              		.loc 2 451 3 is_stmt 1 view .LVU120
 396 009c 03A9     		add	r1, sp, #12
 397 009e 3046     		mov	r0, r6
 398 00a0 FFF7FEFF 		bl	LL_GPIO_Init
 399              	.LVL24:
 452:Src/main.c    **** 
 453:Src/main.c    ****   /**/
 454:Src/main.c    ****   GPIO_InitStruct.Pin = XCVR_EN_Pin;
 400              		.loc 2 454 3 view .LVU121
 401              		.loc 2 454 23 is_stmt 0 view .LVU122
 402 00a4 0B4B     		ldr	r3, .L11+24
 403 00a6 0393     		str	r3, [sp, #12]
 455:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 404              		.loc 2 455 3 is_stmt 1 view .LVU123
 405              		.loc 2 455 24 is_stmt 0 view .LVU124
 406 00a8 0495     		str	r5, [sp, #16]
 456:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 407              		.loc 2 456 3 is_stmt 1 view .LVU125
 408              		.loc 2 456 25 is_stmt 0 view .LVU126
 409 00aa 0597     		str	r7, [sp, #20]
 457:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 410              		.loc 2 457 3 is_stmt 1 view .LVU127
 411              		.loc 2 457 30 is_stmt 0 view .LVU128
 412 00ac 0694     		str	r4, [sp, #24]
 458:Src/main.c    ****   LL_GPIO_Init(XCVR_EN_GPIO_Port, &GPIO_InitStruct);
 413              		.loc 2 458 3 is_stmt 1 view .LVU129
 414 00ae 03A9     		add	r1, sp, #12
 415 00b0 4046     		mov	r0, r8
 416 00b2 FFF7FEFF 		bl	LL_GPIO_Init
 417              	.LVL25:
 459:Src/main.c    **** 
 460:Src/main.c    **** }
 418              		.loc 2 460 1 is_stmt 0 view .LVU130
 419 00b6 08B0     		add	sp, sp, #32
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 24
 422              		@ sp needed
 423 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 424              	.L12:
 425              		.align	2
 426              	.L11:
 427 00bc 00100240 		.word	1073876992
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 75


 428 00c0 00100140 		.word	1073811456
 429 00c4 000C0140 		.word	1073810432
 430 00c8 00080140 		.word	1073809408
 431 00cc 20002004 		.word	69206048
 432 00d0 C000C004 		.word	79691968
 433 00d4 08000804 		.word	67633160
 434              		.cfi_endproc
 435              	.LFE713:
 437              		.section	.text.MX_TIM2_Init,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 443              	MX_TIM2_Init:
 444              	.LFB709:
 206:Src/main.c    **** 
 445              		.loc 2 206 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 80
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 70B5     		push	{r4, r5, r6, lr}
 450              	.LCFI7:
 451              		.cfi_def_cfa_offset 16
 452              		.cfi_offset 4, -16
 453              		.cfi_offset 5, -12
 454              		.cfi_offset 6, -8
 455              		.cfi_offset 14, -4
 456 0002 94B0     		sub	sp, sp, #80
 457              	.LCFI8:
 458              		.cfi_def_cfa_offset 96
 212:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 459              		.loc 2 212 3 view .LVU132
 212:Src/main.c    ****   LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 460              		.loc 2 212 22 is_stmt 0 view .LVU133
 461 0004 0024     		movs	r4, #0
 462 0006 0F94     		str	r4, [sp, #60]
 463 0008 1094     		str	r4, [sp, #64]
 464 000a 1194     		str	r4, [sp, #68]
 465 000c 1294     		str	r4, [sp, #72]
 466 000e 1394     		str	r4, [sp, #76]
 213:Src/main.c    **** 
 467              		.loc 2 213 3 is_stmt 1 view .LVU134
 213:Src/main.c    **** 
 468              		.loc 2 213 25 is_stmt 0 view .LVU135
 469 0010 2022     		movs	r2, #32
 470 0012 2146     		mov	r1, r4
 471 0014 07A8     		add	r0, sp, #28
 472 0016 FFF7FEFF 		bl	memset
 473              	.LVL26:
 215:Src/main.c    **** 
 474              		.loc 2 215 3 is_stmt 1 view .LVU136
 215:Src/main.c    **** 
 475              		.loc 2 215 23 is_stmt 0 view .LVU137
 476 001a 0294     		str	r4, [sp, #8]
 477 001c 0394     		str	r4, [sp, #12]
 478 001e 0494     		str	r4, [sp, #16]
 479 0020 0594     		str	r4, [sp, #20]
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 76


 480 0022 0694     		str	r4, [sp, #24]
 218:Src/main.c    **** 
 481              		.loc 2 218 3 is_stmt 1 view .LVU138
 482              	.LVL27:
 483              	.LBB154:
 484              	.LBI154:
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 485              		.loc 3 447 22 view .LVU139
 486              	.LBB155:
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 487              		.loc 3 449 3 view .LVU140
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 488              		.loc 3 450 3 view .LVU141
 489 0024 2F4E     		ldr	r6, .L15
 490 0026 F369     		ldr	r3, [r6, #28]
 491 0028 43F00103 		orr	r3, r3, #1
 492 002c F361     		str	r3, [r6, #28]
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 493              		.loc 3 452 3 view .LVU142
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 494              		.loc 3 452 12 is_stmt 0 view .LVU143
 495 002e F369     		ldr	r3, [r6, #28]
 496 0030 03F00103 		and	r3, r3, #1
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 497              		.loc 3 452 10 view .LVU144
 498 0034 0193     		str	r3, [sp, #4]
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 499              		.loc 3 453 3 is_stmt 1 view .LVU145
 500 0036 019B     		ldr	r3, [sp, #4]
 501              	.LVL28:
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 502              		.loc 3 453 3 is_stmt 0 view .LVU146
 503              	.LBE155:
 504              	.LBE154:
 221:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 505              		.loc 2 221 3 is_stmt 1 view .LVU147
 506              	.LBB156:
 507              	.LBI156:
1499:Drivers/CMSIS/Include/core_cm3.h **** {
 508              		.loc 1 1499 26 view .LVU148
 509              	.LBB157:
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 510              		.loc 1 1501 3 view .LVU149
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 511              		.loc 1 1501 26 is_stmt 0 view .LVU150
 512 0038 2B4B     		ldr	r3, .L15+4
 513 003a D868     		ldr	r0, [r3, #12]
 514              	.LBE157:
 515              	.LBE156:
 221:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 516              		.loc 2 221 3 view .LVU151
 517 003c 2246     		mov	r2, r4
 518 003e 0521     		movs	r1, #5
 519 0040 C0F30220 		ubfx	r0, r0, #8, #3
 520 0044 FFF7FEFF 		bl	NVIC_EncodePriority
 521              	.LVL29:
 522              	.LBB158:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 77


 523              	.LBI158:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 524              		.loc 1 1639 22 is_stmt 1 view .LVU152
 525              	.LBB159:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
 526              		.loc 1 1641 3 view .LVU153
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 527              		.loc 1 1643 5 view .LVU154
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 528              		.loc 1 1643 48 is_stmt 0 view .LVU155
 529 0048 0001     		lsls	r0, r0, #4
 530              	.LVL30:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 531              		.loc 1 1643 48 view .LVU156
 532 004a C0B2     		uxtb	r0, r0
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 533              		.loc 1 1643 46 view .LVU157
 534 004c 274B     		ldr	r3, .L15+8
 535 004e 83F81C03 		strb	r0, [r3, #796]
 536              	.LVL31:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 537              		.loc 1 1643 46 view .LVU158
 538              	.LBE159:
 539              	.LBE158:
 222:Src/main.c    **** 
 540              		.loc 2 222 3 is_stmt 1 view .LVU159
 541              	.LBB160:
 542              	.LBI160:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 543              		.loc 1 1511 22 view .LVU160
 544              	.LBB161:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 545              		.loc 1 1513 3 view .LVU161
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 546              		.loc 1 1515 5 view .LVU162
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 547              		.loc 1 1515 43 is_stmt 0 view .LVU163
 548 0052 4FF08052 		mov	r2, #268435456
 549 0056 1A60     		str	r2, [r3]
 550              	.LVL32:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 551              		.loc 1 1515 43 view .LVU164
 552              	.LBE161:
 553              	.LBE160:
 227:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 554              		.loc 2 227 3 is_stmt 1 view .LVU165
 227:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 555              		.loc 2 227 28 is_stmt 0 view .LVU166
 556 0058 0123     		movs	r3, #1
 557 005a ADF83C30 		strh	r3, [sp, #60]	@ movhi
 228:Src/main.c    ****   TIM_InitStruct.Autoreload = 64-LL_TIM_IC_FILTER_FDIV1_N2;
 558              		.loc 2 228 3 is_stmt 1 view .LVU167
 228:Src/main.c    ****   TIM_InitStruct.Autoreload = 64-LL_TIM_IC_FILTER_FDIV1_N2;
 559              		.loc 2 228 30 is_stmt 0 view .LVU168
 560 005e 1094     		str	r4, [sp, #64]
 229:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 561              		.loc 2 229 3 is_stmt 1 view .LVU169
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 78


 229:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 562              		.loc 2 229 29 is_stmt 0 view .LVU170
 563 0060 234B     		ldr	r3, .L15+12
 564 0062 1193     		str	r3, [sp, #68]
 230:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 565              		.loc 2 230 3 is_stmt 1 view .LVU171
 230:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 566              		.loc 2 230 32 is_stmt 0 view .LVU172
 567 0064 1294     		str	r4, [sp, #72]
 231:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM2);
 568              		.loc 2 231 3 is_stmt 1 view .LVU173
 569 0066 0FA9     		add	r1, sp, #60
 570 0068 4FF08040 		mov	r0, #1073741824
 571 006c FFF7FEFF 		bl	LL_TIM_Init
 572              	.LVL33:
 232:Src/main.c    ****   LL_TIM_SetClockSource(TIM2, LL_TIM_CLOCKSOURCE_INTERNAL);
 573              		.loc 2 232 3 view .LVU174
 574              	.LBB162:
 575              	.LBI162:
 576              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @file    stm32f1xx_ll_tim.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifndef __STM32F1xx_LL_TIM_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __STM32F1xx_LL_TIM_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 79


  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 2: CC2P */
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 4: CC3P */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   12U            /* 6: CC4P */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OIS1 */
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   1U,            /* 1: OIS1N */
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 2: OIS2 */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 80


  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   3U,            /* 3: OIS2N */
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 4: OIS3 */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   5U,            /* 5: OIS3N */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U             /* 6: OIS4 */
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U : 6U)
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 81


 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetPrescaler().*/
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetCounterMode().*/
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    be a number between 0x0000 and 0xFFFFFFFF.
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetAutoReload().*/
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetClockDivision().*/
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downc
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    from the RCR value (N).
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 82


 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    GP timers: this parameter must be a number between Min_Data = 0x
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Max_Data = 0xFF.
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Advanced timers: this parameter must be a number between Min_Dat
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Max_Data = 0xFFFF.
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    @ref LL_TIM_SetRepetitionCounter().*/
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetMode().*/
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_CC_EnableChannel() or @ref LL_TIM_CC_DisableChannel().*/
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                LL_TIM_OC_SetCompareCHx (x=1..6).*/
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetPolarity().*/
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 83


 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_OC_SetIdleState().*/
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPolarity().*/
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetActiveInput().*/
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetPrescaler().*/
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                @ref LL_TIM_IC_SetFilter().*/
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_SetEncoderMode().*/
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 84


 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPolarity().*/
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetActiveInput().*/
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetPrescaler().*/
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  @ref LL_TIM_IC_SetFilter().*/
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 85


 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPolarity().*/
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetPrescaler().*/
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref TIM_LL_EC_IC_FILTER.
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_IC_SetFilter().*/
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     @ref LL_TIM_OC_SetCompareCH2().*/
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                        programmed. */
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_SetOffStates()
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       register has been written, their content is frozen until the 
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       switching-on of the outputs.
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 86


 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_OC_SetDeadTime()
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                        programmed. */
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_EnableBRK() or @ref LL_TIM_DisableBRK()
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_ConfigBRK()
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @ref LL_TIM_EnableAutomaticOutput() or @ref LL_TIM_DisableAut
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       programmed. */
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 87


 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 88


 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!<The counter counts up and d
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 89


 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 90


 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 91


 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 92


 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 93


 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 94


 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Register value
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 95


 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval DTG[0:7]
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(((uint64_t)((__DT__)*1000U) / TIM_CALC_DTS((__TIMCLK__), (__CKD__)))  & DT_DELAY_1) :
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_2 | ((uint8_t)((uint8_t)((((uint64_t)((__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 1U) - (uint8_t) 64) & DT_DELAY_2)) 
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_3 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 3U) - (uint8_t) 32) & DT_DELAY_3)) 
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (uint8_t)(DT_RANGE_4 | ((uint8_t)((uint8_t)(((((uint64_t)(__DT__)*1000U))/ TIM_CALC_DTS((__TIMC
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                                  (__CKD__))) >> 4U) - (uint8_t) 32) & DT_DELAY_4)) 
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     0U)
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         active/inactive delay.
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 96


1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         (when the timer operates in one pulse mode).
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable timer counter.
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 97


1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable timer counter.
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable update event generation.
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable update event generation.
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 98


1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set update event source
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Counter overflow/underflow
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Setting the UG bit
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual event update source
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 99


1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t counter_mode;
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   if (counter_mode == 0U)
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   }
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return counter_mode;
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 100


1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 577              		.loc 5 1254 22 view .LVU175
 578              	.LBB163:
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
 579              		.loc 5 1256 3 view .LVU176
 580 0070 4FF08045 		mov	r5, #1073741824
 581 0074 2B68     		ldr	r3, [r5]
 582 0076 23F08003 		bic	r3, r3, #128
 583 007a 2B60     		str	r3, [r5]
 584              	.LVL34:
 585              		.loc 5 1256 3 is_stmt 0 view .LVU177
 586              	.LBE163:
 587              	.LBE162:
 233:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_TOGGLE;
 588              		.loc 2 233 3 is_stmt 1 view .LVU178
 589              	.LBB164:
 590              	.LBI164:
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         (when supported) and the digital filters.
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 101


1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         generators (when supported) and the digital filters.
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the counter value.
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the counter value.
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 102


1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 103


1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Repetition counter value
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 104


1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 105


1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 106


1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure an output channel.
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 107


1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]), Mode << SHIFT
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 108


1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIFT
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 109


1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function is significant only for the timer instances
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a break input.
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_SetIdleState\n
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 110


1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_GetIdleState\n
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 111


1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 112


1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 113


1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 114


2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         the Ocx and OCxN signals).
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
2048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 115


2075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 116


2132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure input channel.
2153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING
2183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 117


2189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))       
2191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              << SHIFT_TAB_ICxx[iChannel]);
2192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the active input.
2198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current active input.
2223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 118


2246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the input filter duration.
2298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
2302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 119


2303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the input filter duration.
2336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 120


2360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 121


2417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * a timer instance provides an XOR input.
2454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 122


2474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 123


2531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
 591              		.loc 5 2581 22 view .LVU179
 592              	.LBB165:
2582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 593              		.loc 5 2583 3 view .LVU180
 594 007c AB68     		ldr	r3, [r5, #8]
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 124


 595 007e 23F48043 		bic	r3, r3, #16384
 596 0082 23F00703 		bic	r3, r3, #7
 597 0086 AB60     		str	r3, [r5, #8]
 598              	.LVL35:
 599              		.loc 5 2583 3 is_stmt 0 view .LVU181
 600              	.LBE165:
 601              	.LBE164:
 234:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 602              		.loc 2 234 3 is_stmt 1 view .LVU182
 234:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 603              		.loc 2 234 28 is_stmt 0 view .LVU183
 604 0088 3023     		movs	r3, #48
 605 008a 0793     		str	r3, [sp, #28]
 235:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 606              		.loc 2 235 3 is_stmt 1 view .LVU184
 235:Src/main.c    ****   TIM_OC_InitStruct.OCNState = LL_TIM_OCSTATE_DISABLE;
 607              		.loc 2 235 29 is_stmt 0 view .LVU185
 608 008c 0894     		str	r4, [sp, #32]
 236:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 0;
 609              		.loc 2 236 3 is_stmt 1 view .LVU186
 236:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 0;
 610              		.loc 2 236 30 is_stmt 0 view .LVU187
 611 008e 0994     		str	r4, [sp, #36]
 237:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 612              		.loc 2 237 3 is_stmt 1 view .LVU188
 237:Src/main.c    ****   TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
 613              		.loc 2 237 34 is_stmt 0 view .LVU189
 614 0090 0A94     		str	r4, [sp, #40]
 238:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 615              		.loc 2 238 3 is_stmt 1 view .LVU190
 238:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 616              		.loc 2 238 32 is_stmt 0 view .LVU191
 617 0092 0B94     		str	r4, [sp, #44]
 239:Src/main.c    ****   LL_TIM_OC_DisableFast(TIM2, LL_TIM_CHANNEL_CH2);
 618              		.loc 2 239 3 is_stmt 1 view .LVU192
 619 0094 07AA     		add	r2, sp, #28
 620 0096 1021     		movs	r1, #16
 621 0098 2846     		mov	r0, r5
 622 009a FFF7FEFF 		bl	LL_TIM_OC_Init
 623              	.LVL36:
 240:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM2, LL_TIM_TRGO_RESET);
 624              		.loc 2 240 3 view .LVU193
 625              	.LBB166:
 626              	.LBI166:
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 627              		.loc 5 1853 22 view .LVU194
 628              	.LBB167:
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
 629              		.loc 5 1855 3 view .LVU195
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 630              		.loc 5 1856 3 view .LVU196
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 631              		.loc 5 1857 3 view .LVU197
 632 009e AB69     		ldr	r3, [r5, #24]
 633 00a0 23F48063 		bic	r3, r3, #1024
 634 00a4 AB61     		str	r3, [r5, #24]
 635              	.LVL37:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 125


1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 636              		.loc 5 1857 3 is_stmt 0 view .LVU198
 637              	.LBE167:
 638              	.LBE166:
 241:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM2);
 639              		.loc 2 241 3 is_stmt 1 view .LVU199
 640              	.LBB168:
 641              	.LBI168:
2584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
2591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
2593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
2623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
 642              		.loc 5 2627 22 view .LVU200
 643              	.LBB169:
2628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 644              		.loc 5 2629 3 view .LVU201
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 126


 645 00a6 6B68     		ldr	r3, [r5, #4]
 646 00a8 23F07003 		bic	r3, r3, #112
 647 00ac 6B60     		str	r3, [r5, #4]
 648              	.LVL38:
 649              		.loc 5 2629 3 is_stmt 0 view .LVU202
 650              	.LBE169:
 651              	.LBE168:
 242:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 652              		.loc 2 242 3 is_stmt 1 view .LVU203
 653              	.LBB170:
 654              	.LBI170:
2630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
2648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
2655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 127


2676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
 655              		.loc 5 2693 22 view .LVU204
 656              	.LBB171:
2694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 657              		.loc 5 2695 3 view .LVU205
 658 00ae AB68     		ldr	r3, [r5, #8]
 659 00b0 23F08003 		bic	r3, r3, #128
 660 00b4 AB60     		str	r3, [r5, #8]
 661              	.LVL39:
 662              		.loc 5 2695 3 is_stmt 0 view .LVU206
 663              	.LBE171:
 664              	.LBE170:
 246:Src/main.c    ****   /**TIM2 GPIO Configuration
 665              		.loc 2 246 3 is_stmt 1 view .LVU207
 666              	.LBB172:
 667              	.LBI172:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 668              		.loc 3 763 22 view .LVU208
 669              	.LBB173:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 670              		.loc 3 765 3 view .LVU209
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 671              		.loc 3 766 3 view .LVU210
 672 00b6 B369     		ldr	r3, [r6, #24]
 673 00b8 43F00403 		orr	r3, r3, #4
 674 00bc B361     		str	r3, [r6, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 675              		.loc 3 768 3 view .LVU211
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 676              		.loc 3 768 12 is_stmt 0 view .LVU212
 677 00be B369     		ldr	r3, [r6, #24]
 678 00c0 03F00403 		and	r3, r3, #4
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 679              		.loc 3 768 10 view .LVU213
 680 00c4 0093     		str	r3, [sp]
 681              		.loc 3 769 3 is_stmt 1 view .LVU214
 682 00c6 009B     		ldr	r3, [sp]
 683              	.LVL40:
 684              		.loc 3 769 3 is_stmt 0 view .LVU215
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 128


 685              	.LBE173:
 686              	.LBE172:
 250:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 687              		.loc 2 250 3 is_stmt 1 view .LVU216
 250:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 688              		.loc 2 250 23 is_stmt 0 view .LVU217
 689 00c8 40F20223 		movw	r3, #514
 690 00cc 0293     		str	r3, [sp, #8]
 251:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 691              		.loc 2 251 3 is_stmt 1 view .LVU218
 251:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 692              		.loc 2 251 24 is_stmt 0 view .LVU219
 693 00ce 0923     		movs	r3, #9
 694 00d0 0393     		str	r3, [sp, #12]
 252:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 695              		.loc 2 252 3 is_stmt 1 view .LVU220
 252:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 696              		.loc 2 252 25 is_stmt 0 view .LVU221
 697 00d2 0223     		movs	r3, #2
 698 00d4 0493     		str	r3, [sp, #16]
 253:Src/main.c    ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 699              		.loc 2 253 3 is_stmt 1 view .LVU222
 253:Src/main.c    ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 700              		.loc 2 253 30 is_stmt 0 view .LVU223
 701 00d6 0594     		str	r4, [sp, #20]
 254:Src/main.c    **** 
 702              		.loc 2 254 3 is_stmt 1 view .LVU224
 703 00d8 02A9     		add	r1, sp, #8
 704 00da 0648     		ldr	r0, .L15+16
 705 00dc FFF7FEFF 		bl	LL_GPIO_Init
 706              	.LVL41:
 256:Src/main.c    **** 
 707              		.loc 2 256 1 is_stmt 0 view .LVU225
 708 00e0 14B0     		add	sp, sp, #80
 709              	.LCFI9:
 710              		.cfi_def_cfa_offset 16
 711              		@ sp needed
 712 00e2 70BD     		pop	{r4, r5, r6, pc}
 713              	.L16:
 714              		.align	2
 715              	.L15:
 716 00e4 00100240 		.word	1073876992
 717 00e8 00ED00E0 		.word	-536810240
 718 00ec 00E100E0 		.word	-536813312
 719 00f0 4000F0FF 		.word	-1048512
 720 00f4 00080140 		.word	1073809408
 721              		.cfi_endproc
 722              	.LFE709:
 724              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 725              		.align	1
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 730              	MX_USART1_UART_Init:
 731              	.LFB710:
 264:Src/main.c    **** 
 732              		.loc 2 264 1 is_stmt 1 view -0
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 129


 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 56
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 30B5     		push	{r4, r5, lr}
 737              	.LCFI10:
 738              		.cfi_def_cfa_offset 12
 739              		.cfi_offset 4, -12
 740              		.cfi_offset 5, -8
 741              		.cfi_offset 14, -4
 742 0002 8FB0     		sub	sp, sp, #60
 743              	.LCFI11:
 744              		.cfi_def_cfa_offset 72
 270:Src/main.c    **** 
 745              		.loc 2 270 3 view .LVU227
 270:Src/main.c    **** 
 746              		.loc 2 270 24 is_stmt 0 view .LVU228
 747 0004 0024     		movs	r4, #0
 748 0006 0794     		str	r4, [sp, #28]
 749 0008 0894     		str	r4, [sp, #32]
 750 000a 0994     		str	r4, [sp, #36]
 751 000c 0A94     		str	r4, [sp, #40]
 752 000e 0B94     		str	r4, [sp, #44]
 753 0010 0C94     		str	r4, [sp, #48]
 754 0012 0D94     		str	r4, [sp, #52]
 272:Src/main.c    **** 
 755              		.loc 2 272 3 is_stmt 1 view .LVU229
 272:Src/main.c    **** 
 756              		.loc 2 272 23 is_stmt 0 view .LVU230
 757 0014 0294     		str	r4, [sp, #8]
 758 0016 0394     		str	r4, [sp, #12]
 759 0018 0494     		str	r4, [sp, #16]
 760 001a 0594     		str	r4, [sp, #20]
 761 001c 0694     		str	r4, [sp, #24]
 275:Src/main.c    **** 
 762              		.loc 2 275 3 is_stmt 1 view .LVU231
 763              	.LVL42:
 764              	.LBB174:
 765              	.LBI174:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 766              		.loc 3 763 22 view .LVU232
 767              	.LBB175:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 768              		.loc 3 765 3 view .LVU233
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 769              		.loc 3 766 3 view .LVU234
 770 001e 294B     		ldr	r3, .L19
 771 0020 9A69     		ldr	r2, [r3, #24]
 772 0022 42F48042 		orr	r2, r2, #16384
 773 0026 9A61     		str	r2, [r3, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 774              		.loc 3 768 3 view .LVU235
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 775              		.loc 3 768 12 is_stmt 0 view .LVU236
 776 0028 9A69     		ldr	r2, [r3, #24]
 777 002a 02F48042 		and	r2, r2, #16384
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 778              		.loc 3 768 10 view .LVU237
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 130


 779 002e 0192     		str	r2, [sp, #4]
 780              		.loc 3 769 3 is_stmt 1 view .LVU238
 781 0030 019A     		ldr	r2, [sp, #4]
 782              	.LVL43:
 783              		.loc 3 769 3 is_stmt 0 view .LVU239
 784              	.LBE175:
 785              	.LBE174:
 277:Src/main.c    ****   /**USART1 GPIO Configuration
 786              		.loc 2 277 3 is_stmt 1 view .LVU240
 787              	.LBB176:
 788              	.LBI176:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 789              		.loc 3 763 22 view .LVU241
 790              	.LBB177:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 791              		.loc 3 765 3 view .LVU242
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 792              		.loc 3 766 3 view .LVU243
 793 0032 9A69     		ldr	r2, [r3, #24]
 794 0034 42F00402 		orr	r2, r2, #4
 795 0038 9A61     		str	r2, [r3, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 796              		.loc 3 768 3 view .LVU244
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 797              		.loc 3 768 12 is_stmt 0 view .LVU245
 798 003a 9B69     		ldr	r3, [r3, #24]
 799 003c 03F00403 		and	r3, r3, #4
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 800              		.loc 3 768 10 view .LVU246
 801 0040 0093     		str	r3, [sp]
 802              		.loc 3 769 3 is_stmt 1 view .LVU247
 803 0042 009B     		ldr	r3, [sp]
 804              	.LVL44:
 805              		.loc 3 769 3 is_stmt 0 view .LVU248
 806              	.LBE177:
 807              	.LBE176:
 282:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 808              		.loc 2 282 3 is_stmt 1 view .LVU249
 282:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 809              		.loc 2 282 23 is_stmt 0 view .LVU250
 810 0044 204B     		ldr	r3, .L19+4
 811 0046 0293     		str	r3, [sp, #8]
 283:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 812              		.loc 2 283 3 is_stmt 1 view .LVU251
 283:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 813              		.loc 2 283 24 is_stmt 0 view .LVU252
 814 0048 0923     		movs	r3, #9
 815 004a 0393     		str	r3, [sp, #12]
 284:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 816              		.loc 2 284 3 is_stmt 1 view .LVU253
 284:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 817              		.loc 2 284 25 is_stmt 0 view .LVU254
 818 004c 0323     		movs	r3, #3
 819 004e 0493     		str	r3, [sp, #16]
 285:Src/main.c    ****   LL_GPIO_Init(XCVR_DI_GPIO_Port, &GPIO_InitStruct);
 820              		.loc 2 285 3 is_stmt 1 view .LVU255
 286:Src/main.c    **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 131


 821              		.loc 2 286 3 view .LVU256
 822 0050 1E4D     		ldr	r5, .L19+8
 823 0052 02A9     		add	r1, sp, #8
 824 0054 2846     		mov	r0, r5
 825 0056 FFF7FEFF 		bl	LL_GPIO_Init
 826              	.LVL45:
 288:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 827              		.loc 2 288 3 view .LVU257
 288:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 828              		.loc 2 288 23 is_stmt 0 view .LVU258
 829 005a 1D4B     		ldr	r3, .L19+12
 830 005c 0293     		str	r3, [sp, #8]
 289:Src/main.c    ****   LL_GPIO_Init(XCVR_RO_GPIO_Port, &GPIO_InitStruct);
 831              		.loc 2 289 3 is_stmt 1 view .LVU259
 289:Src/main.c    ****   LL_GPIO_Init(XCVR_RO_GPIO_Port, &GPIO_InitStruct);
 832              		.loc 2 289 24 is_stmt 0 view .LVU260
 833 005e 0423     		movs	r3, #4
 834 0060 0393     		str	r3, [sp, #12]
 290:Src/main.c    **** 
 835              		.loc 2 290 3 is_stmt 1 view .LVU261
 836 0062 02A9     		add	r1, sp, #8
 837 0064 2846     		mov	r0, r5
 838 0066 FFF7FEFF 		bl	LL_GPIO_Init
 839              	.LVL46:
 293:Src/main.c    ****   NVIC_EnableIRQ(USART1_IRQn);
 840              		.loc 2 293 3 view .LVU262
 841              	.LBB178:
 842              	.LBI178:
1499:Drivers/CMSIS/Include/core_cm3.h **** {
 843              		.loc 1 1499 26 view .LVU263
 844              	.LBB179:
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 845              		.loc 1 1501 3 view .LVU264
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 846              		.loc 1 1501 26 is_stmt 0 view .LVU265
 847 006a 1A4B     		ldr	r3, .L19+16
 848 006c D868     		ldr	r0, [r3, #12]
 849              	.LBE179:
 850              	.LBE178:
 293:Src/main.c    ****   NVIC_EnableIRQ(USART1_IRQn);
 851              		.loc 2 293 3 view .LVU266
 852 006e 2246     		mov	r2, r4
 853 0070 0521     		movs	r1, #5
 854 0072 C0F30220 		ubfx	r0, r0, #8, #3
 855 0076 FFF7FEFF 		bl	NVIC_EncodePriority
 856              	.LVL47:
 857              	.LBB180:
 858              	.LBI180:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 859              		.loc 1 1639 22 is_stmt 1 view .LVU267
 860              	.LBB181:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
 861              		.loc 1 1641 3 view .LVU268
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 862              		.loc 1 1643 5 view .LVU269
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 863              		.loc 1 1643 48 is_stmt 0 view .LVU270
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 132


 864 007a 0001     		lsls	r0, r0, #4
 865              	.LVL48:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 866              		.loc 1 1643 48 view .LVU271
 867 007c C0B2     		uxtb	r0, r0
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 868              		.loc 1 1643 46 view .LVU272
 869 007e 164B     		ldr	r3, .L19+20
 870 0080 83F82503 		strb	r0, [r3, #805]
 871              	.LVL49:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 872              		.loc 1 1643 46 view .LVU273
 873              	.LBE181:
 874              	.LBE180:
 294:Src/main.c    **** 
 875              		.loc 2 294 3 is_stmt 1 view .LVU274
 876              	.LBB182:
 877              	.LBI182:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 878              		.loc 1 1511 22 view .LVU275
 879              	.LBB183:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 880              		.loc 1 1513 3 view .LVU276
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 881              		.loc 1 1515 5 view .LVU277
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 882              		.loc 1 1515 43 is_stmt 0 view .LVU278
 883 0084 2022     		movs	r2, #32
 884 0086 5A60     		str	r2, [r3, #4]
 885              	.LVL50:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 886              		.loc 1 1515 43 view .LVU279
 887              	.LBE183:
 888              	.LBE182:
 299:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 889              		.loc 2 299 3 is_stmt 1 view .LVU280
 299:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 890              		.loc 2 299 29 is_stmt 0 view .LVU281
 891 0088 4FF4E133 		mov	r3, #115200
 892 008c 0793     		str	r3, [sp, #28]
 300:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 893              		.loc 2 300 3 is_stmt 1 view .LVU282
 300:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 894              		.loc 2 300 30 is_stmt 0 view .LVU283
 895 008e 0894     		str	r4, [sp, #32]
 301:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 896              		.loc 2 301 3 is_stmt 1 view .LVU284
 301:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 897              		.loc 2 301 29 is_stmt 0 view .LVU285
 898 0090 0994     		str	r4, [sp, #36]
 302:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 899              		.loc 2 302 3 is_stmt 1 view .LVU286
 302:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 900              		.loc 2 302 27 is_stmt 0 view .LVU287
 901 0092 0A94     		str	r4, [sp, #40]
 303:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 902              		.loc 2 303 3 is_stmt 1 view .LVU288
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 133


 303:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 903              		.loc 2 303 38 is_stmt 0 view .LVU289
 904 0094 0C23     		movs	r3, #12
 905 0096 0B93     		str	r3, [sp, #44]
 304:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 906              		.loc 2 304 3 is_stmt 1 view .LVU290
 304:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 907              		.loc 2 304 40 is_stmt 0 view .LVU291
 908 0098 0C94     		str	r4, [sp, #48]
 305:Src/main.c    ****   LL_USART_Init(USART1, &USART_InitStruct);
 909              		.loc 2 305 3 is_stmt 1 view .LVU292
 305:Src/main.c    ****   LL_USART_Init(USART1, &USART_InitStruct);
 910              		.loc 2 305 33 is_stmt 0 view .LVU293
 911 009a 0D94     		str	r4, [sp, #52]
 306:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART1);
 912              		.loc 2 306 3 is_stmt 1 view .LVU294
 913 009c 0F4C     		ldr	r4, .L19+24
 914 009e 07A9     		add	r1, sp, #28
 915 00a0 2046     		mov	r0, r4
 916 00a2 FFF7FEFF 		bl	LL_USART_Init
 917              	.LVL51:
 307:Src/main.c    ****   LL_USART_Enable(USART1);
 918              		.loc 2 307 3 view .LVU295
 919              	.LBB184:
 920              	.LBI184:
 921              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @file    stm32f1xx_ll_usart.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #ifndef __STM32F1xx_LL_USART_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __STM32F1xx_LL_USART_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @addtogroup STM32F1xx_LL_Driver
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 134


  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** typedef struct
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 135


  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** } LL_USART_InitTypeDef;
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** typedef struct
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 136


 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 137


 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if  defined(USART_CR1_OVER8)
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 138


 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 139


 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Write a value in USART register
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be written
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Read a value in USART register
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be read
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Register value
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      (((__PERIPHCLK__)*25)/(2*(__
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (((__LL_USART_DIV_SAMPLING8_
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            ((__LL_USART_DIVFRAQ_SAM
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 140


 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     (((__PERIPHCLK__)*25)/(4*(__
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     ((((__LL_USART_DIV_SAMPLING1
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  USART Enable
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 141


 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Receiver Disable
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Transmitter Enable
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Transmitter Disable
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         of Transmitter and Receiver
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 142


 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 143


 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 144


 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Oversampling mode
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 145


 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 146


 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 147


 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 148


 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                               uint32_t StopBits)
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         for wake up with address mark detection.
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 149


 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 150


 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR3_ONEBIT)
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable One bit sampling method
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable One bit sampling method
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 151


1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OneBitSampling_Feature */
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                           uint32_t BaudRate)
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   else
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t usartdiv = 0x0U;
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 152


1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     {
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     }
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   else
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     {
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     }
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (brrresult);
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #else
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudR
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk)
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t usartdiv = 0x0U;
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if ((usartdiv & 0xFFFFU) != 0U)
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     brrresult = PeriphClk / usartdiv;
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (brrresult);
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 153


1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable IrDA mode
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable IrDA mode
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 154


1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 155


1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard mode
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 156


1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 157


1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 158


1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable LIN mode
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 159


1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable LIN mode
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 160


1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
 922              		.loc 6 1526 22 view .LVU296
 923              	.LBB185:
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 924              		.loc 6 1531 3 view .LVU297
 925 00a6 2369     		ldr	r3, [r4, #16]
 926 00a8 23F49043 		bic	r3, r3, #18432
 927 00ac 2361     		str	r3, [r4, #16]
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 928              		.loc 6 1532 3 view .LVU298
 929 00ae 6369     		ldr	r3, [r4, #20]
 930 00b0 23F02A03 		bic	r3, r3, #42
 931 00b4 6361     		str	r3, [r4, #20]
 932              	.LVL52:
 933              		.loc 6 1532 3 is_stmt 0 view .LVU299
 934              	.LBE185:
 935              	.LBE184:
 308:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 936              		.loc 2 308 3 is_stmt 1 view .LVU300
 937              	.LBB186:
 938              	.LBI186:
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 939              		.loc 6 411 22 view .LVU301
 940              	.LBB187:
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 941              		.loc 6 413 3 view .LVU302
 942 00b6 E368     		ldr	r3, [r4, #12]
 943 00b8 43F40053 		orr	r3, r3, #8192
 944 00bc E360     		str	r3, [r4, #12]
 945              	.LVL53:
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 946              		.loc 6 413 3 is_stmt 0 view .LVU303
 947              	.LBE187:
 948              	.LBE186:
 313:Src/main.c    **** 
 949              		.loc 2 313 1 view .LVU304
 950 00be 0FB0     		add	sp, sp, #60
 951              	.LCFI12:
 952              		.cfi_def_cfa_offset 12
 953              		@ sp needed
 954 00c0 30BD     		pop	{r4, r5, pc}
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 161


 955              	.L20:
 956 00c2 00BF     		.align	2
 957              	.L19:
 958 00c4 00100240 		.word	1073876992
 959 00c8 02000204 		.word	67239938
 960 00cc 00080140 		.word	1073809408
 961 00d0 04000404 		.word	67371012
 962 00d4 00ED00E0 		.word	-536810240
 963 00d8 00E100E0 		.word	-536813312
 964 00dc 00380140 		.word	1073821696
 965              		.cfi_endproc
 966              	.LFE710:
 968              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 969              		.align	1
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	MX_USART2_UART_Init:
 975              	.LFB711:
 321:Src/main.c    **** 
 976              		.loc 2 321 1 is_stmt 1 view -0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 56
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980 0000 30B5     		push	{r4, r5, lr}
 981              	.LCFI13:
 982              		.cfi_def_cfa_offset 12
 983              		.cfi_offset 4, -12
 984              		.cfi_offset 5, -8
 985              		.cfi_offset 14, -4
 986 0002 8FB0     		sub	sp, sp, #60
 987              	.LCFI14:
 988              		.cfi_def_cfa_offset 72
 327:Src/main.c    **** 
 989              		.loc 2 327 3 view .LVU306
 327:Src/main.c    **** 
 990              		.loc 2 327 24 is_stmt 0 view .LVU307
 991 0004 0024     		movs	r4, #0
 992 0006 0794     		str	r4, [sp, #28]
 993 0008 0894     		str	r4, [sp, #32]
 994 000a 0994     		str	r4, [sp, #36]
 995 000c 0A94     		str	r4, [sp, #40]
 996 000e 0B94     		str	r4, [sp, #44]
 997 0010 0C94     		str	r4, [sp, #48]
 998 0012 0D94     		str	r4, [sp, #52]
 329:Src/main.c    **** 
 999              		.loc 2 329 3 is_stmt 1 view .LVU308
 329:Src/main.c    **** 
 1000              		.loc 2 329 23 is_stmt 0 view .LVU309
 1001 0014 0294     		str	r4, [sp, #8]
 1002 0016 0394     		str	r4, [sp, #12]
 1003 0018 0494     		str	r4, [sp, #16]
 1004 001a 0594     		str	r4, [sp, #20]
 1005 001c 0694     		str	r4, [sp, #24]
 332:Src/main.c    **** 
 1006              		.loc 2 332 3 is_stmt 1 view .LVU310
 1007              	.LVL54:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 162


 1008              	.LBB188:
 1009              	.LBI188:
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 1010              		.loc 3 447 22 view .LVU311
 1011              	.LBB189:
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 1012              		.loc 3 449 3 view .LVU312
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1013              		.loc 3 450 3 view .LVU313
 1014 001e 394B     		ldr	r3, .L23
 1015 0020 DA69     		ldr	r2, [r3, #28]
 1016 0022 42F40032 		orr	r2, r2, #131072
 1017 0026 DA61     		str	r2, [r3, #28]
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1018              		.loc 3 452 3 view .LVU314
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1019              		.loc 3 452 12 is_stmt 0 view .LVU315
 1020 0028 DA69     		ldr	r2, [r3, #28]
 1021 002a 02F40032 		and	r2, r2, #131072
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1022              		.loc 3 452 10 view .LVU316
 1023 002e 0192     		str	r2, [sp, #4]
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 1024              		.loc 3 453 3 is_stmt 1 view .LVU317
 1025 0030 019A     		ldr	r2, [sp, #4]
 1026              	.LVL55:
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 1027              		.loc 3 453 3 is_stmt 0 view .LVU318
 1028              	.LBE189:
 1029              	.LBE188:
 334:Src/main.c    ****   /**USART2 GPIO Configuration
 1030              		.loc 2 334 3 is_stmt 1 view .LVU319
 1031              	.LBB190:
 1032              	.LBI190:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 1033              		.loc 3 763 22 view .LVU320
 1034              	.LBB191:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 1035              		.loc 3 765 3 view .LVU321
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1036              		.loc 3 766 3 view .LVU322
 1037 0032 9A69     		ldr	r2, [r3, #24]
 1038 0034 42F00402 		orr	r2, r2, #4
 1039 0038 9A61     		str	r2, [r3, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1040              		.loc 3 768 3 view .LVU323
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1041              		.loc 3 768 12 is_stmt 0 view .LVU324
 1042 003a 9B69     		ldr	r3, [r3, #24]
 1043 003c 03F00403 		and	r3, r3, #4
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 1044              		.loc 3 768 10 view .LVU325
 1045 0040 0093     		str	r3, [sp]
 1046              		.loc 3 769 3 is_stmt 1 view .LVU326
 1047 0042 009B     		ldr	r3, [sp]
 1048              	.LVL56:
 1049              		.loc 3 769 3 is_stmt 0 view .LVU327
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 163


 1050              	.LBE191:
 1051              	.LBE190:
 339:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1052              		.loc 2 339 3 is_stmt 1 view .LVU328
 339:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1053              		.loc 2 339 23 is_stmt 0 view .LVU329
 1054 0044 40F20443 		movw	r3, #1028
 1055 0048 0293     		str	r3, [sp, #8]
 340:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 1056              		.loc 2 340 3 is_stmt 1 view .LVU330
 340:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 1057              		.loc 2 340 24 is_stmt 0 view .LVU331
 1058 004a 0923     		movs	r3, #9
 1059 004c 0393     		str	r3, [sp, #12]
 341:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1060              		.loc 2 341 3 is_stmt 1 view .LVU332
 341:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1061              		.loc 2 341 25 is_stmt 0 view .LVU333
 1062 004e 0323     		movs	r3, #3
 1063 0050 0493     		str	r3, [sp, #16]
 342:Src/main.c    ****   LL_GPIO_Init(DBG_TX_GPIO_Port, &GPIO_InitStruct);
 1064              		.loc 2 342 3 is_stmt 1 view .LVU334
 343:Src/main.c    **** 
 1065              		.loc 2 343 3 view .LVU335
 1066 0052 2D4D     		ldr	r5, .L23+4
 1067 0054 02A9     		add	r1, sp, #8
 1068 0056 2846     		mov	r0, r5
 1069 0058 FFF7FEFF 		bl	LL_GPIO_Init
 1070              	.LVL57:
 345:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 1071              		.loc 2 345 3 view .LVU336
 345:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 1072              		.loc 2 345 23 is_stmt 0 view .LVU337
 1073 005c 40F60803 		movw	r3, #2056
 1074 0060 0293     		str	r3, [sp, #8]
 346:Src/main.c    ****   LL_GPIO_Init(DBG_RX_GPIO_Port, &GPIO_InitStruct);
 1075              		.loc 2 346 3 is_stmt 1 view .LVU338
 346:Src/main.c    ****   LL_GPIO_Init(DBG_RX_GPIO_Port, &GPIO_InitStruct);
 1076              		.loc 2 346 24 is_stmt 0 view .LVU339
 1077 0062 0423     		movs	r3, #4
 1078 0064 0393     		str	r3, [sp, #12]
 347:Src/main.c    **** 
 1079              		.loc 2 347 3 is_stmt 1 view .LVU340
 1080 0066 02A9     		add	r1, sp, #8
 1081 0068 2846     		mov	r0, r5
 1082 006a FFF7FEFF 		bl	LL_GPIO_Init
 1083              	.LVL58:
 352:Src/main.c    **** 
 1084              		.loc 2 352 3 view .LVU341
 1085              	.LBB192:
 1086              	.LBI192:
 1087              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @file    stm32f1xx_ll_dma.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 164


   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #ifndef __STM32F1xx_LL_DMA_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __STM32F1xx_LL_DMA_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** };
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 165


  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** typedef struct
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         is incremented or not.
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         is incremented or not.
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 166


 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 167


 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 168


 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 169


 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Write a value in DMA register
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __REG__ Register to be written
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Read a value in DMA register
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __REG__ Register to be read
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Register value
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 170


 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval DMAx
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(DMA2)
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA2)
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval DMAx_Channely
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA2)
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 171


 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  DMA1_Channel7)
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  DMA1_Channel7)
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  * @{
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  */
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Enable DMA channel.
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Disable DMA channel.
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 172


 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 173


 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Configuration);
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 1088              		.loc 7 553 22 view .LVU342
 1089              	.LBB193:
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 1090              		.loc 7 555 3 view .LVU343
 1091 006e 274B     		ldr	r3, .L23+8
 1092 0070 DA6E     		ldr	r2, [r3, #108]
 1093 0072 22F48042 		bic	r2, r2, #16384
 1094 0076 22F01002 		bic	r2, r2, #16
 1095 007a DA66     		str	r2, [r3, #108]
 1096              	.LVL59:
 1097              		.loc 7 555 3 is_stmt 0 view .LVU344
 1098              	.LBE193:
 1099              	.LBE192:
 354:Src/main.c    **** 
 1100              		.loc 2 354 3 is_stmt 1 view .LVU345
 1101              	.LBB194:
 1102              	.LBI194:
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 174


 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Mode);
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 175


 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_CIRC));
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_PINC));
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 176


 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_MINC));
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Peripheral size.
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 177


 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Peripheral size.
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Memory size.
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 178


 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Memory size.
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Channel priority level.
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 1103              		.loc 7 833 22 view .LVU346
 1104              	.LBB195:
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 1105              		.loc 7 835 3 view .LVU347
 1106 007c DA6E     		ldr	r2, [r3, #108]
 1107 007e 22F44052 		bic	r2, r2, #12288
 1108 0082 DA66     		str	r2, [r3, #108]
 1109              	.LVL60:
 1110              		.loc 7 835 3 is_stmt 0 view .LVU348
 1111              	.LBE195:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 179


 1112              	.LBE194:
 356:Src/main.c    **** 
 1113              		.loc 2 356 3 is_stmt 1 view .LVU349
 1114              	.LBB196:
 1115              	.LBI196:
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 1116              		.loc 7 602 22 view .LVU350
 1117              	.LBB197:
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Mode);
 1118              		.loc 7 604 3 view .LVU351
 1119 0084 DA6E     		ldr	r2, [r3, #108]
 1120 0086 22F02002 		bic	r2, r2, #32
 1121 008a DA66     		str	r2, [r3, #108]
 1122              	.LVL61:
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Mode);
 1123              		.loc 7 604 3 is_stmt 0 view .LVU352
 1124              	.LBE197:
 1125              	.LBE196:
 358:Src/main.c    **** 
 1126              		.loc 2 358 3 is_stmt 1 view .LVU353
 1127              	.LBB198:
 1128              	.LBI198:
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 1129              		.loc 7 647 22 view .LVU354
 1130              	.LBB199:
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 1131              		.loc 7 649 3 view .LVU355
 1132 008c DA6E     		ldr	r2, [r3, #108]
 1133 008e 22F04002 		bic	r2, r2, #64
 1134 0092 DA66     		str	r2, [r3, #108]
 1135              	.LVL62:
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 1136              		.loc 7 649 3 is_stmt 0 view .LVU356
 1137              	.LBE199:
 1138              	.LBE198:
 360:Src/main.c    **** 
 1139              		.loc 2 360 3 is_stmt 1 view .LVU357
 1140              	.LBB200:
 1141              	.LBI200:
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 1142              		.loc 7 692 22 view .LVU358
 1143              	.LBB201:
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 1144              		.loc 7 694 3 view .LVU359
 1145 0094 DA6E     		ldr	r2, [r3, #108]
 1146 0096 42F08002 		orr	r2, r2, #128
 1147 009a DA66     		str	r2, [r3, #108]
 1148              	.LVL63:
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 1149              		.loc 7 694 3 is_stmt 0 view .LVU360
 1150              	.LBE201:
 1151              	.LBE200:
 362:Src/main.c    **** 
 1152              		.loc 2 362 3 is_stmt 1 view .LVU361
 1153              	.LBB202:
 1154              	.LBI202:
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 180


 1155              		.loc 7 738 22 view .LVU362
 1156              	.LBB203:
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 1157              		.loc 7 740 3 view .LVU363
 1158 009c DA6E     		ldr	r2, [r3, #108]
 1159 009e 22F44072 		bic	r2, r2, #768
 1160 00a2 DA66     		str	r2, [r3, #108]
 1161              	.LVL64:
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 1162              		.loc 7 740 3 is_stmt 0 view .LVU364
 1163              	.LBE203:
 1164              	.LBE202:
 364:Src/main.c    **** 
 1165              		.loc 2 364 3 is_stmt 1 view .LVU365
 1166              	.LBB204:
 1167              	.LBI204:
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 1168              		.loc 7 785 22 view .LVU366
 1169              	.LBB205:
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 1170              		.loc 7 787 3 view .LVU367
 1171 00a4 DA6E     		ldr	r2, [r3, #108]
 1172 00a6 22F44062 		bic	r2, r2, #3072
 1173 00aa DA66     		str	r2, [r3, #108]
 1174              	.LVL65:
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 1175              		.loc 7 787 3 is_stmt 0 view .LVU368
 1176              	.LBE205:
 1177              	.LBE204:
 367:Src/main.c    ****   NVIC_EnableIRQ(USART2_IRQn);
 1178              		.loc 2 367 3 is_stmt 1 view .LVU369
 1179              	.LBB206:
 1180              	.LBI206:
1499:Drivers/CMSIS/Include/core_cm3.h **** {
 1181              		.loc 1 1499 26 view .LVU370
 1182              	.LBB207:
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 1183              		.loc 1 1501 3 view .LVU371
1501:Drivers/CMSIS/Include/core_cm3.h **** }
 1184              		.loc 1 1501 26 is_stmt 0 view .LVU372
 1185 00ac 184B     		ldr	r3, .L23+12
 1186 00ae D868     		ldr	r0, [r3, #12]
 1187              	.LBE207:
 1188              	.LBE206:
 367:Src/main.c    ****   NVIC_EnableIRQ(USART2_IRQn);
 1189              		.loc 2 367 3 view .LVU373
 1190 00b0 2246     		mov	r2, r4
 1191 00b2 0521     		movs	r1, #5
 1192 00b4 C0F30220 		ubfx	r0, r0, #8, #3
 1193 00b8 FFF7FEFF 		bl	NVIC_EncodePriority
 1194              	.LVL66:
 1195              	.LBB208:
 1196              	.LBI208:
1639:Drivers/CMSIS/Include/core_cm3.h **** {
 1197              		.loc 1 1639 22 is_stmt 1 view .LVU374
 1198              	.LBB209:
1641:Drivers/CMSIS/Include/core_cm3.h ****   {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 181


 1199              		.loc 1 1641 3 view .LVU375
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 1200              		.loc 1 1643 5 view .LVU376
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 1201              		.loc 1 1643 48 is_stmt 0 view .LVU377
 1202 00bc 0001     		lsls	r0, r0, #4
 1203              	.LVL67:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 1204              		.loc 1 1643 48 view .LVU378
 1205 00be C0B2     		uxtb	r0, r0
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 1206              		.loc 1 1643 46 view .LVU379
 1207 00c0 144B     		ldr	r3, .L23+16
 1208 00c2 83F82603 		strb	r0, [r3, #806]
 1209              	.LVL68:
1643:Drivers/CMSIS/Include/core_cm3.h ****   }
 1210              		.loc 1 1643 46 view .LVU380
 1211              	.LBE209:
 1212              	.LBE208:
 368:Src/main.c    **** 
 1213              		.loc 2 368 3 is_stmt 1 view .LVU381
 1214              	.LBB210:
 1215              	.LBI210:
1511:Drivers/CMSIS/Include/core_cm3.h **** {
 1216              		.loc 1 1511 22 view .LVU382
 1217              	.LBB211:
1513:Drivers/CMSIS/Include/core_cm3.h ****   {
 1218              		.loc 1 1513 3 view .LVU383
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 1219              		.loc 1 1515 5 view .LVU384
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 1220              		.loc 1 1515 43 is_stmt 0 view .LVU385
 1221 00c6 4022     		movs	r2, #64
 1222 00c8 5A60     		str	r2, [r3, #4]
 1223              	.LVL69:
1515:Drivers/CMSIS/Include/core_cm3.h ****   }
 1224              		.loc 1 1515 43 view .LVU386
 1225              	.LBE211:
 1226              	.LBE210:
 373:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 1227              		.loc 2 373 3 is_stmt 1 view .LVU387
 373:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 1228              		.loc 2 373 29 is_stmt 0 view .LVU388
 1229 00ca 4FF4E133 		mov	r3, #115200
 1230 00ce 0793     		str	r3, [sp, #28]
 374:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 1231              		.loc 2 374 3 is_stmt 1 view .LVU389
 374:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 1232              		.loc 2 374 30 is_stmt 0 view .LVU390
 1233 00d0 0894     		str	r4, [sp, #32]
 375:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 1234              		.loc 2 375 3 is_stmt 1 view .LVU391
 375:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 1235              		.loc 2 375 29 is_stmt 0 view .LVU392
 1236 00d2 0994     		str	r4, [sp, #36]
 376:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 1237              		.loc 2 376 3 is_stmt 1 view .LVU393
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 182


 376:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 1238              		.loc 2 376 27 is_stmt 0 view .LVU394
 1239 00d4 0A94     		str	r4, [sp, #40]
 377:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 1240              		.loc 2 377 3 is_stmt 1 view .LVU395
 377:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 1241              		.loc 2 377 38 is_stmt 0 view .LVU396
 1242 00d6 0C23     		movs	r3, #12
 1243 00d8 0B93     		str	r3, [sp, #44]
 378:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 1244              		.loc 2 378 3 is_stmt 1 view .LVU397
 378:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 1245              		.loc 2 378 40 is_stmt 0 view .LVU398
 1246 00da 0C94     		str	r4, [sp, #48]
 379:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 1247              		.loc 2 379 3 is_stmt 1 view .LVU399
 379:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 1248              		.loc 2 379 33 is_stmt 0 view .LVU400
 1249 00dc 0D94     		str	r4, [sp, #52]
 380:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART2);
 1250              		.loc 2 380 3 is_stmt 1 view .LVU401
 1251 00de 0E4C     		ldr	r4, .L23+20
 1252 00e0 07A9     		add	r1, sp, #28
 1253 00e2 2046     		mov	r0, r4
 1254 00e4 FFF7FEFF 		bl	LL_USART_Init
 1255              	.LVL70:
 381:Src/main.c    ****   LL_USART_Enable(USART2);
 1256              		.loc 2 381 3 view .LVU402
 1257              	.LBB212:
 1258              	.LBI212:
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 1259              		.loc 6 1526 22 view .LVU403
 1260              	.LBB213:
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 1261              		.loc 6 1531 3 view .LVU404
 1262 00e8 2369     		ldr	r3, [r4, #16]
 1263 00ea 23F49043 		bic	r3, r3, #18432
 1264 00ee 2361     		str	r3, [r4, #16]
 1265              		.loc 6 1532 3 view .LVU405
 1266 00f0 6369     		ldr	r3, [r4, #20]
 1267 00f2 23F02A03 		bic	r3, r3, #42
 1268 00f6 6361     		str	r3, [r4, #20]
 1269              	.LVL71:
 1270              		.loc 6 1532 3 is_stmt 0 view .LVU406
 1271              	.LBE213:
 1272              	.LBE212:
 382:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 1273              		.loc 2 382 3 is_stmt 1 view .LVU407
 1274              	.LBB214:
 1275              	.LBI214:
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 1276              		.loc 6 411 22 view .LVU408
 1277              	.LBB215:
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 1278              		.loc 6 413 3 view .LVU409
 1279 00f8 E368     		ldr	r3, [r4, #12]
 1280 00fa 43F40053 		orr	r3, r3, #8192
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 183


 1281 00fe E360     		str	r3, [r4, #12]
 1282              	.LVL72:
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 1283              		.loc 6 413 3 is_stmt 0 view .LVU410
 1284              	.LBE215:
 1285              	.LBE214:
 387:Src/main.c    **** 
 1286              		.loc 2 387 1 view .LVU411
 1287 0100 0FB0     		add	sp, sp, #60
 1288              	.LCFI15:
 1289              		.cfi_def_cfa_offset 12
 1290              		@ sp needed
 1291 0102 30BD     		pop	{r4, r5, pc}
 1292              	.L24:
 1293              		.align	2
 1294              	.L23:
 1295 0104 00100240 		.word	1073876992
 1296 0108 00080140 		.word	1073809408
 1297 010c 00000240 		.word	1073872896
 1298 0110 00ED00E0 		.word	-536810240
 1299 0114 00E100E0 		.word	-536813312
 1300 0118 00440040 		.word	1073759232
 1301              		.cfi_endproc
 1302              	.LFE711:
 1304              		.section	.text.StartDefaultTask,"ax",%progbits
 1305              		.align	1
 1306              		.global	StartDefaultTask
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1311              	StartDefaultTask:
 1312              	.LFB714:
 461:Src/main.c    **** 
 462:Src/main.c    **** /* USER CODE BEGIN 4 */
 463:Src/main.c    **** 
 464:Src/main.c    **** /* USER CODE END 4 */
 465:Src/main.c    **** 
 466:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 467:Src/main.c    **** /**
 468:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 469:Src/main.c    ****   * @param  argument: Not used
 470:Src/main.c    ****   * @retval None
 471:Src/main.c    ****   */
 472:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 473:Src/main.c    **** void StartDefaultTask(void *argument)
 474:Src/main.c    **** {
 1313              		.loc 2 474 1 is_stmt 1 view -0
 1314              		.cfi_startproc
 1315              		@ Volatile: function does not return.
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 1318              	.LVL73:
 1319              		.loc 2 474 1 is_stmt 0 view .LVU413
 1320 0000 08B5     		push	{r3, lr}
 1321              	.LCFI16:
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 3, -8
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 184


 1324              		.cfi_offset 14, -4
 1325              	.LVL74:
 1326              	.L26:
 475:Src/main.c    ****   /* USER CODE BEGIN 5 */
 476:Src/main.c    ****   /* Infinite loop */
 477:Src/main.c    ****   for(;;)
 1327              		.loc 2 477 3 is_stmt 1 discriminator 1 view .LVU414
 478:Src/main.c    ****   {
 479:Src/main.c    ****     osDelay(1);
 1328              		.loc 2 479 5 discriminator 1 view .LVU415
 1329 0002 0120     		movs	r0, #1
 1330 0004 FFF7FEFF 		bl	osDelay
 1331              	.LVL75:
 477:Src/main.c    ****   {
 1332              		.loc 2 477 3 discriminator 1 view .LVU416
 1333 0008 FBE7     		b	.L26
 1334              		.cfi_endproc
 1335              	.LFE714:
 1337              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1338              		.align	1
 1339              		.global	HAL_TIM_PeriodElapsedCallback
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1344              	HAL_TIM_PeriodElapsedCallback:
 1345              	.LVL76:
 1346              	.LFB715:
 480:Src/main.c    ****   }
 481:Src/main.c    ****   /* USER CODE END 5 */
 482:Src/main.c    **** }
 483:Src/main.c    **** 
 484:Src/main.c    **** /**
 485:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 486:Src/main.c    ****   * @note   This function is called  when TIM4 interrupt took place, inside
 487:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 488:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 489:Src/main.c    ****   * @param  htim : TIM handle
 490:Src/main.c    ****   * @retval None
 491:Src/main.c    ****   */
 492:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 493:Src/main.c    **** {
 1347              		.loc 2 493 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		.loc 2 493 1 is_stmt 0 view .LVU418
 1352 0000 08B5     		push	{r3, lr}
 1353              	.LCFI17:
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 3, -8
 1356              		.cfi_offset 14, -4
 494:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 495:Src/main.c    **** 
 496:Src/main.c    ****   /* USER CODE END Callback 0 */
 497:Src/main.c    ****   if (htim->Instance == TIM4) {
 1357              		.loc 2 497 3 is_stmt 1 view .LVU419
 1358              		.loc 2 497 11 is_stmt 0 view .LVU420
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 185


 1359 0002 0268     		ldr	r2, [r0]
 1360              		.loc 2 497 6 view .LVU421
 1361 0004 034B     		ldr	r3, .L32
 1362 0006 9A42     		cmp	r2, r3
 1363 0008 00D0     		beq	.L31
 1364              	.LVL77:
 1365              	.L28:
 498:Src/main.c    ****     HAL_IncTick();
 499:Src/main.c    ****   }
 500:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* USER CODE END Callback 1 */
 503:Src/main.c    **** }
 1366              		.loc 2 503 1 view .LVU422
 1367 000a 08BD     		pop	{r3, pc}
 1368              	.LVL78:
 1369              	.L31:
 498:Src/main.c    ****     HAL_IncTick();
 1370              		.loc 2 498 5 is_stmt 1 view .LVU423
 1371 000c FFF7FEFF 		bl	HAL_IncTick
 1372              	.LVL79:
 1373              		.loc 2 503 1 is_stmt 0 view .LVU424
 1374 0010 FBE7     		b	.L28
 1375              	.L33:
 1376 0012 00BF     		.align	2
 1377              	.L32:
 1378 0014 00080040 		.word	1073743872
 1379              		.cfi_endproc
 1380              	.LFE715:
 1382              		.section	.text.Error_Handler,"ax",%progbits
 1383              		.align	1
 1384              		.global	Error_Handler
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1389              	Error_Handler:
 1390              	.LFB716:
 504:Src/main.c    **** 
 505:Src/main.c    **** /**
 506:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 507:Src/main.c    ****   * @retval None
 508:Src/main.c    ****   */
 509:Src/main.c    **** void Error_Handler(void)
 510:Src/main.c    **** {
 1391              		.loc 2 510 1 is_stmt 1 view -0
 1392              		.cfi_startproc
 1393              		@ Volatile: function does not return.
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              		@ link register save eliminated.
 511:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 512:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 513:Src/main.c    ****   __disable_irq();
 1397              		.loc 2 513 3 view .LVU426
 1398              	.LBB216:
 1399              	.LBI216:
 1400              		.file 8 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 186


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 187


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 188


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1401              		.loc 8 140 27 view .LVU427
 1402              	.LBB217:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1403              		.loc 8 142 3 view .LVU428
 1404              		.syntax unified
 1405              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1406 0000 72B6     		cpsid i
 1407              	@ 0 "" 2
 1408              		.thumb
 1409              		.syntax unified
 1410              	.L35:
 1411              	.LBE217:
 1412              	.LBE216:
 514:Src/main.c    ****   while (1)
 1413              		.loc 2 514 3 discriminator 1 view .LVU429
 515:Src/main.c    ****   {
 516:Src/main.c    ****   }
 1414              		.loc 2 516 3 discriminator 1 view .LVU430
 514:Src/main.c    ****   while (1)
 1415              		.loc 2 514 9 discriminator 1 view .LVU431
 1416 0002 FEE7     		b	.L35
 1417              		.cfi_endproc
 1418              	.LFE716:
 1420              		.section	.text.SystemClock_Config,"ax",%progbits
 1421              		.align	1
 1422              		.global	SystemClock_Config
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1427              	SystemClock_Config:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 189


 1428              	.LFB708:
 160:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 1429              		.loc 2 160 1 view -0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433 0000 08B5     		push	{r3, lr}
 1434              	.LCFI18:
 1435              		.cfi_def_cfa_offset 8
 1436              		.cfi_offset 3, -8
 1437              		.cfi_offset 14, -4
 161:Src/main.c    ****   while(LL_FLASH_GetLatency()!= LL_FLASH_LATENCY_2)
 1438              		.loc 2 161 3 view .LVU433
 1439              	.LVL80:
 1440              	.LBB218:
 1441              	.LBI218:
 1442              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @file    stm32f1xx_ll_system.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   @verbatim
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ==============================================================================
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     [..]
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     used by user:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   @endverbatim
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @attention
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * All rights reserved.</center></h2>
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * the "License"; You may not use this file except in compliance with the
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * License. You may obtain a copy of the License at:
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *                        opensource.org/licenses/BSD-3-Clause
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #ifndef __STM32F1xx_LL_SYSTEM_H
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define __STM32F1xx_LL_SYSTEM_H
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #ifdef __cplusplus
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** extern "C" {
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 190


  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #include "stm32f1xx.h"
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @addtogroup STM32F1xx_LL_Driver
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined (FLASH) || defined (DBGMCU)
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_CR_DBG_TIM2_STOP          /*!< TIM2 counter stopp
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_CR_DBG_TIM3_STOP          /*!< TIM3 counter stopp
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_CR_DBG_TIM4_STOP          /*!< TIM4 counter stopp
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM5_STOP)
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_CR_DBG_TIM5_STOP          /*!< TIM5 counter stopp
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM5_STOP */
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM6_STOP)
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_CR_DBG_TIM6_STOP          /*!< TIM6 counter stopp
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 191


  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM6_STOP */
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM7_STOP)
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_CR_DBG_TIM7_STOP          /*!< TIM7 counter stopp
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM7_STOP */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM12_STOP)
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM12_STOP     DBGMCU_CR_DBG_TIM12_STOP         /*!< TIM12 counter stop
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM12_STOP */
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM13_STOP)
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM13_STOP     DBGMCU_CR_DBG_TIM13_STOP         /*!< TIM13 counter stop
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM13_STOP */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM14_STOP)
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_CR_DBG_TIM14_STOP         /*!< TIM14 counter stop
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM14_STOP */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_CR_DBG_WWDG_STOP          /*!< Debug Window Watch
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_CR_DBG_IWDG_STOP          /*!< Debug Independent 
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS timeout
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT /*!< I2C2 SMBUS timeout
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT */
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN1_STOP)
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN1_STOP      DBGMCU_CR_DBG_CAN1_STOP          /*!< CAN1 debug stopped
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN2_STOP)
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN2_STOP      DBGMCU_CR_DBG_CAN2_STOP          /*!< CAN2 debug stopped
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN2_STOP */
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_CR_DBG_TIM1_STOP   /*!< TIM1 counter stopped when
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM8_STOP)
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_CR_DBG_TIM8_STOP   /*!< TIM8 counter stopped when
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM9_STOP)
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM9_STOP      DBGMCU_CR_DBG_TIM9_STOP   /*!< TIM9 counter stopped when
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM9_STOP */
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM10_STOP)
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM10_STOP     DBGMCU_CR_DBG_TIM10_STOP   /*!< TIM10 counter stopped wh
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM10_STOP */
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM11_STOP)
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM11_STOP     DBGMCU_CR_DBG_TIM11_STOP   /*!< TIM11 counter stopped wh
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM11_STOP */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM15_STOP)
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM15_STOP     DBGMCU_CR_DBG_TIM15_STOP   /*!< TIM15 counter stopped wh
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM15_STOP */
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM16_STOP)
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM16_STOP     DBGMCU_CR_DBG_TIM16_STOP   /*!< TIM16 counter stopped wh
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM16_STOP */
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM17_STOP)
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM17_STOP     DBGMCU_CR_DBG_TIM17_STOP   /*!< TIM17 counter stopped wh
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM17_STOP */
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 192


 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 0x00000000U             /*!< FLASH Zero Latency cycle */
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_0     /*!< FLASH One Latency cycle */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_1     /*!< FLASH Two wait states */
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #else
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* FLASH_ACR_LATENCY */
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Return the device identifier
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Low Density devices, the device ID is 0x412
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Medium Density devices, the device ID is 0x410
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For High Density devices, the device ID is 0x414
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For XL Density devices, the device ID is 0x430
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Connectivity Line devices, the device ID is 0x418
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Return the device revision identifier
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note This field indicates the revision of the device.
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000,for Low Density devices
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x0000, revB -> 0x2000, revZ -> 0x2001, rev1,2,3,X or 
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1000, revZ -> 0x1001,rev1,2,3,X or Y -> 0x1003,
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1003,for XL Density devices
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000, revZ -> 0x1001 for  Connectivity line devices
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 193


 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 194


 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Get Trace pin assignment control
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 195


 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 196


 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 197


 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Set FLASH Latency
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 1443              		.loc 9 470 22 view .LVU434
 1444              	.LBB219:
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 1445              		.loc 9 472 3 view .LVU435
 1446 0002 294A     		ldr	r2, .L44
 1447 0004 1368     		ldr	r3, [r2]
 1448 0006 23F00703 		bic	r3, r3, #7
 1449 000a 43F00203 		orr	r3, r3, #2
 1450 000e 1360     		str	r3, [r2]
 1451              	.LVL81:
 1452              	.L37:
 1453              		.loc 9 472 3 is_stmt 0 view .LVU436
 1454              	.LBE219:
 1455              	.LBE218:
 164:Src/main.c    ****   LL_RCC_HSI_SetCalibTrimming(16);
 1456              		.loc 2 164 3 is_stmt 1 discriminator 1 view .LVU437
 162:Src/main.c    ****   {
 1457              		.loc 2 162 30 discriminator 1 view .LVU438
 1458              	.LBB220:
 1459              	.LBI220:
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Get FLASH Latency
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 198


 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 1460              		.loc 9 483 26 discriminator 1 view .LVU439
 1461              	.LBB221:
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 1462              		.loc 9 485 3 discriminator 1 view .LVU440
 1463              		.loc 9 485 21 is_stmt 0 discriminator 1 view .LVU441
 1464 0010 254B     		ldr	r3, .L44
 1465 0012 1B68     		ldr	r3, [r3]
 1466              		.loc 9 485 10 discriminator 1 view .LVU442
 1467 0014 03F00703 		and	r3, r3, #7
 1468              	.LBE221:
 1469              	.LBE220:
 162:Src/main.c    ****   {
 1470              		.loc 2 162 30 discriminator 1 view .LVU443
 1471 0018 022B     		cmp	r3, #2
 1472 001a F9D1     		bne	.L37
 165:Src/main.c    ****   LL_RCC_HSI_Enable();
 1473              		.loc 2 165 3 is_stmt 1 view .LVU444
 1474              	.LVL82:
 1475              	.LBB222:
 1476              	.LBI222:
 1477              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @file    stm32f1xx_ll_rcc.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #ifndef __STM32F1xx_LL_RCC_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __STM32F1xx_LL_RCC_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #include "stm32f1xx.h"
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 199


  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC)
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** typedef struct
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 200


  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *           HW set-up.
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define HSE_VALUE    8000000U  /*!< Value of the HSE oscillator in Hz */
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* HSE_VALUE */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define HSI_VALUE    8000000U  /*!< Value of the HSI oscillator in Hz */
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* HSI_VALUE */
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LSE_VALUE    32768U    /*!< Value of the LSE oscillator in Hz */
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* LSE_VALUE */
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LSI_VALUE    40000U    /*!< Value of the LSI oscillator in Hz */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* LSI_VALUE */
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYC               RCC_CIR_PLL3RDYC    /*!< PLL3(PLLI2S) Ready Interrupt Cle
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYC               RCC_CIR_PLL2RDYC    /*!< PLL2 Ready Interrupt Clear */
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYF               RCC_CIR_PLL3RDYF    /*!< PLL3(PLLI2S) Ready Interrupt fla
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYF               RCC_CIR_PLL2RDYF    /*!< PLL2 Ready Interrupt flag */
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF        /*!< Clock Security System Interrupt 
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF     /*!< PIN reset flag */
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF     /*!< POR/PDR reset flag */
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF     /*!< Software Reset flag */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 201


 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF    /*!< Independent Watchdog reset flag 
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF    /*!< Window watchdog reset flag */
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF    /*!< Low-Power reset flag */
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYIE              RCC_CIR_PLL3RDYIE     /*!< PLL3(PLLI2S) Ready Interrupt E
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYIE              RCC_CIR_PLL2RDYIE     /*!< PLL2 Ready Interrupt Enable */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_HSE_PREDIV2_DIV HSE PREDIV2 Division factor
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_1           RCC_CFGR2_PREDIV2_DIV1   /*!< PREDIV2 input clock not di
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_2           RCC_CFGR2_PREDIV2_DIV2   /*!< PREDIV2 input clock divide
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_3           RCC_CFGR2_PREDIV2_DIV3   /*!< PREDIV2 input clock divide
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_4           RCC_CFGR2_PREDIV2_DIV4   /*!< PREDIV2 input clock divide
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_5           RCC_CFGR2_PREDIV2_DIV5   /*!< PREDIV2 input clock divide
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_6           RCC_CFGR2_PREDIV2_DIV6   /*!< PREDIV2 input clock divide
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_7           RCC_CFGR2_PREDIV2_DIV7   /*!< PREDIV2 input clock divide
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_8           RCC_CFGR2_PREDIV2_DIV8   /*!< PREDIV2 input clock divide
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_9           RCC_CFGR2_PREDIV2_DIV9   /*!< PREDIV2 input clock divide
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_10          RCC_CFGR2_PREDIV2_DIV10  /*!< PREDIV2 input clock divide
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_11          RCC_CFGR2_PREDIV2_DIV11  /*!< PREDIV2 input clock divide
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_12          RCC_CFGR2_PREDIV2_DIV12  /*!< PREDIV2 input clock divide
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_13          RCC_CFGR2_PREDIV2_DIV13  /*!< PREDIV2 input clock divide
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_14          RCC_CFGR2_PREDIV2_DIV14  /*!< PREDIV2 input clock divide
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_15          RCC_CFGR2_PREDIV2_DIV15  /*!< PREDIV2 input clock divide
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_16          RCC_CFGR2_PREDIV2_DIV16  /*!< PREDIV2 input clock divide
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 202


 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCO_NOCLOCK      /*!< MCO output disabled, no c
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCO_SYSCLK       /*!< SYSCLK selection as MCO s
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCO_HSI          /*!< HSI selection as MCO sour
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 203


 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCO_HSE          /*!< HSE selection as MCO sour
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK_DIV_2     RCC_CFGR_MCO_PLLCLK_DIV2  /*!< PLL clock divided by 2*/
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL2CLK)
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLL2CLK          RCC_CFGR_MCO_PLL2CLK      /*!< PLL2 clock selected as MC
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL2CLK */
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL3CLK_DIV2)
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2   RCC_CFGR_MCO_PLL3CLK_DIV2 /*!< PLLI2S clock divided by 2
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL3CLK_DIV2 */
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_EXT_HSE)
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_EXT_HSE          RCC_CFGR_MCO_EXT_HSE      /*!< XT1 external 3-25 MHz osc
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_EXT_HSE */
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCO_PLL3CLK)
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK        RCC_CFGR_MCO_PLL3CLK      /*!< PLLI2S clock selected as 
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCO_PLL3CLK */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2CLKSOURCE Peripheral I2S clock source selection
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S2SRC                                      
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S2SRC | (RCC_CFGR2_I2S2SRC >> 16
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S3SRC                                      
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S3SRC | (RCC_CFGR2_I2S3SRC >> 16
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE Peripheral USB clock source selection
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL             RCC_CFGR_USBPRE        /*!< PLL clock is not divided *
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5     0x00000000U            /*!< PLL clock is divided by 1.
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_OTGFSPRE)
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_2       RCC_CFGR_OTGFSPRE      /*!< PLL clock is divided by 2 
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_3       0x00000000U            /*!< PLL clock is divided by 3 
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_OTGFSPRE*/
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 204


 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC_CLKSOURCE_PCLK2 Peripheral ADC clock source selection
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_2    RCC_CFGR_ADCPRE_DIV2 /*ADC prescaler PCLK2 divided by 2*/
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_4    RCC_CFGR_ADCPRE_DIV4 /*ADC prescaler PCLK2 divided by 4*/
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_6    RCC_CFGR_ADCPRE_DIV6 /*ADC prescaler PCLK2 divided by 6*/
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_8    RCC_CFGR_ADCPRE_DIV8 /*ADC prescaler PCLK2 divided by 8*/
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2 Peripheral I2S get clock source
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE              RCC_CFGR2_I2S2SRC       /*!< I2S2 Clock source selection
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE              RCC_CFGR2_I2S3SRC       /*!< I2S3 Clock source selection
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB Peripheral USB get clock source
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               0x00400000U     /*!< USB Clock source selection */
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC Peripheral ADC get clock source
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE               RCC_CFGR_ADCPRE /*!< ADC Clock source selection */
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U             /*!< No clock used as RTC clock 
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV128    RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 205


 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL2)
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_2                   RCC_CFGR_PLLMULL2  /*!< PLL input clock*2 */
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL2*/
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL3)
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMULL3  /*!< PLL input clock*3 */
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL3*/
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMULL4  /*!< PLL input clock*4 */
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_5                   RCC_CFGR_PLLMULL5  /*!< PLL input clock*5 */
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMULL6  /*!< PLL input clock*6 */
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_7                   RCC_CFGR_PLLMULL7  /*!< PLL input clock*7 */
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMULL8  /*!< PLL input clock*8 */
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_9                   RCC_CFGR_PLLMULL9  /*!< PLL input clock*9 */
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6_5                 RCC_CFGR_PLLMULL6_5 /*!< PLL input clock*6 */
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_10                  RCC_CFGR_PLLMULL10  /*!< PLL input clock*10 */
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_11                  RCC_CFGR_PLLMULL11  /*!< PLL input clock*11 */
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMULL12  /*!< PLL input clock*12 */
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_13                  RCC_CFGR_PLLMULL13  /*!< PLL input clock*13 */
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_14                  RCC_CFGR_PLLMULL14  /*!< PLL input clock*14 */
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_15                  RCC_CFGR_PLLMULL15  /*!< PLL input clock*15 */
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMULL16  /*!< PLL input clock*16 */
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL6_5*/
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI_DIV_2         0x00000000U                                    /*!< HSI 
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC                                /*!< HSE/
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2              (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1SRC << 4U) /*!< PLL2
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1)    /*!< HSE/1
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2)    /*!< HSE/2
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_3         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3)    /*!< HSE/3
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_4         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4)    /*!< HSE/4
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_5         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5)    /*!< HSE/5
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_6         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6)    /*!< HSE/6
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_7         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7)    /*!< HSE/7
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_8         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8)    /*!< HSE/8
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_9         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9)    /*!< HSE/9
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_10        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10)   /*!< HSE/1
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_11        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11)   /*!< HSE/1
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_12        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12)   /*!< HSE/1
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_13        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13)   /*!< HSE/1
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_14        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14)   /*!< HSE/1
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_15        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15)   /*!< HSE/1
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_16        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16)   /*!< HSE/1
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_1        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1 | RCC_CFGR2_PR
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_2        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2 | RCC_CFGR2_PR
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 206


 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_3        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3 | RCC_CFGR2_PR
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_4        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4 | RCC_CFGR2_PR
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_5        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5 | RCC_CFGR2_PR
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_6        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6 | RCC_CFGR2_PR
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_7        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7 | RCC_CFGR2_PR
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_8        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8 | RCC_CFGR2_PR
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_9        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9 | RCC_CFGR2_PR
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_10       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10 | RCC_CFGR2_P
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_11       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11 | RCC_CFGR2_P
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_12       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12 | RCC_CFGR2_P
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_13       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13 | RCC_CFGR2_P
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_14       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14 | RCC_CFGR2_P
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_15       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15 | RCC_CFGR2_P
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_16       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16 | RCC_CFGR2_P
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | 0x00000000U)               /*!< HSE/1
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE)         /*!< HSE/2
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PREDIV_DIV PREDIV Division factor
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                RCC_CFGR2_PREDIV1_DIV1   /*!< PREDIV1 input clock not di
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR2_PREDIV1_DIV2   /*!< PREDIV1 input clock divide
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_3                RCC_CFGR2_PREDIV1_DIV3   /*!< PREDIV1 input clock divide
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_4                RCC_CFGR2_PREDIV1_DIV4   /*!< PREDIV1 input clock divide
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_5                RCC_CFGR2_PREDIV1_DIV5   /*!< PREDIV1 input clock divide
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_6                RCC_CFGR2_PREDIV1_DIV6   /*!< PREDIV1 input clock divide
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_7                RCC_CFGR2_PREDIV1_DIV7   /*!< PREDIV1 input clock divide
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_8                RCC_CFGR2_PREDIV1_DIV8   /*!< PREDIV1 input clock divide
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_9                RCC_CFGR2_PREDIV1_DIV9   /*!< PREDIV1 input clock divide
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_10               RCC_CFGR2_PREDIV1_DIV10  /*!< PREDIV1 input clock divide
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_11               RCC_CFGR2_PREDIV1_DIV11  /*!< PREDIV1 input clock divide
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_12               RCC_CFGR2_PREDIV1_DIV12  /*!< PREDIV1 input clock divide
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_13               RCC_CFGR2_PREDIV1_DIV13  /*!< PREDIV1 input clock divide
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_14               RCC_CFGR2_PREDIV1_DIV14  /*!< PREDIV1 input clock divide
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_15               RCC_CFGR2_PREDIV1_DIV15  /*!< PREDIV1 input clock divide
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_16               RCC_CFGR2_PREDIV1_DIV16  /*!< PREDIV1 input clock divide
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                0x00000000U              /*!< HSE divider clock clock no
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR_PLLXTPRE        /*!< HSE divider clock divided 
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2S_MUL PLLI2S MUL
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_8                RCC_CFGR2_PLL3MUL8   /*!< PLLI2S input clock * 8 */
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_9                RCC_CFGR2_PLL3MUL9   /*!< PLLI2S input clock * 9 */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 207


 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_10               RCC_CFGR2_PLL3MUL10  /*!< PLLI2S input clock * 10 */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_11               RCC_CFGR2_PLL3MUL11  /*!< PLLI2S input clock * 11 */
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_12               RCC_CFGR2_PLL3MUL12  /*!< PLLI2S input clock * 12 */
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_13               RCC_CFGR2_PLL3MUL13  /*!< PLLI2S input clock * 13 */
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_14               RCC_CFGR2_PLL3MUL14  /*!< PLLI2S input clock * 14 */
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_16               RCC_CFGR2_PLL3MUL16  /*!< PLLI2S input clock * 16 */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_20               RCC_CFGR2_PLL3MUL20  /*!< PLLI2S input clock * 20 */
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL2_MUL PLL2 MUL
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_8                  RCC_CFGR2_PLL2MUL8   /*!< PLL2 input clock * 8 */
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_9                  RCC_CFGR2_PLL2MUL9   /*!< PLL2 input clock * 9 */
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_10                 RCC_CFGR2_PLL2MUL10  /*!< PLL2 input clock * 10 */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_11                 RCC_CFGR2_PLL2MUL11  /*!< PLL2 input clock * 11 */
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_12                 RCC_CFGR2_PLL2MUL12  /*!< PLL2 input clock * 12 */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_13                 RCC_CFGR2_PLL2MUL13  /*!< PLL2 input clock * 13 */
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_14                 RCC_CFGR2_PLL2MUL14  /*!< PLL2 input clock * 14 */
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_16                 RCC_CFGR2_PLL2MUL16  /*!< PLL2 input clock * 16 */
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_20                 RCC_CFGR2_PLL2MUL20  /*!< PLL2 input clock * 20 */
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Register value
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 208


 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 / HSI div 2 / PLL2 div Pred
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) \
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****           (((__PLLMUL__) != RCC_CFGR_PLLMULL6_5) ? \
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****               ((__INPUTFREQ__) * ((((__PLLMUL__) & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos) + 2U)
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****               (((__INPUTFREQ__) * 13U) / 2U))
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 or div 2 / HSI div 2)
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) ((__INPUTFREQ__) * (((__PLLMUL__) >> R
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLMULL6_5 */
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 209


 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2SCLK_FREQ (HSE_VALUE, @ref LL_RCC_PLLI2S_GetMultiplicator (),
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLLI2S Input frequency (based on HSE value)
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SMUL__: This parameter can be one of the following values:
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_8
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_9
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_10
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_11
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_12
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_13
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_14
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_16
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_20
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SDIV__: This parameter can be one of the following values:
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2SCLK_FREQ(__INPUTFREQ__, __PLLI2SMUL__, __PLLI2SDIV__) (((__INPUTFREQ__)
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLL2 frequency
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLL2CLK_FREQ (HSE_VALUE, @ref LL_RCC_PLL2_GetMultiplicator (), @re
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL2 Input frequency (based on HSE value)
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2MUL__: This parameter can be one of the following values:
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_8
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_9
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_10
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_11
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_12
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_13
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_14
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_16
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_20
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2DIV__: This parameter can be one of the following values:
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 210


 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL2 clock frequency (in Hz)
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLL2CLK_FREQ(__INPUTFREQ__, __PLL2MUL__, __PLL2DIV__) (((__INPUTFREQ__) * (((
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __AHBPRESCALER__: This parameter can be one of the following values:
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __APB1PRESCALER__: This parameter can be one of the following values:
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __APB2PRESCALER__ be retrieved by @ref LL_RCC_GetAPB2Prescaler
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK2_FREQ(LL_RCC_GetAPB2Prescaler())
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __APB2PRESCALER__: This parameter can be one of the following values:
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 211


 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 212


 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get PREDIV2 division factor
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        PREDIV2       LL_RCC_HSE_GetPrediv2
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_GetPrediv2(void)
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV2));
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 213


 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 214


 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 1478              		.loc 10 886 22 view .LVU445
 1479              	.LBB223:
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 1480              		.loc 10 888 3 view .LVU446
 1481 001c 234A     		ldr	r2, .L44+4
 1482 001e 1368     		ldr	r3, [r2]
 1483 0020 23F0F803 		bic	r3, r3, #248
 1484 0024 43F08003 		orr	r3, r3, #128
 1485 0028 1360     		str	r3, [r2]
 1486              	.LVL83:
 1487              		.loc 10 888 3 is_stmt 0 view .LVU447
 1488              	.LBE223:
 1489              	.LBE222:
 166:Src/main.c    **** 
 1490              		.loc 2 166 3 is_stmt 1 view .LVU448
 1491              	.LBB224:
 1492              	.LBI224:
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1493              		.loc 10 840 22 view .LVU449
 1494              	.LBB225:
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1495              		.loc 10 842 3 view .LVU450
 1496 002a 1368     		ldr	r3, [r2]
 1497 002c 43F00103 		orr	r3, r3, #1
 1498 0030 1360     		str	r3, [r2]
 1499              	.L38:
 1500              	.LBE225:
 1501              	.LBE224:
 172:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2, LL_RCC_PLL_MUL_16);
 1502              		.loc 2 172 3 discriminator 1 view .LVU451
 169:Src/main.c    ****   {
 1503              		.loc 2 169 30 discriminator 1 view .LVU452
 1504              	.LBB226:
 1505              	.LBI226:
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1506              		.loc 10 860 26 discriminator 1 view .LVU453
 1507              	.LBB227:
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1508              		.loc 10 862 3 discriminator 1 view .LVU454
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1509              		.loc 10 862 11 is_stmt 0 discriminator 1 view .LVU455
 1510 0032 1E4B     		ldr	r3, .L44+4
 1511 0034 1B68     		ldr	r3, [r3]
 1512              	.LBE227:
 1513              	.LBE226:
 169:Src/main.c    ****   {
 1514              		.loc 2 169 30 discriminator 1 view .LVU456
 1515 0036 13F0020F 		tst	r3, #2
 1516 003a FAD0     		beq	.L38
 173:Src/main.c    ****   LL_RCC_PLL_Enable();
 1517              		.loc 2 173 3 is_stmt 1 view .LVU457
 1518              	.LVL84:
 1519              	.LBB228:
 1520              	.LBI228:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 215


 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 216


 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 217


1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure the system clock source
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get the system clock source
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 218


1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 219


1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure MCOx
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         MCO           LL_RCC_ConfigMCO
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLL2CLK (*)
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2 (*)
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_EXT_HSE (*)
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK (*)
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource)
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL, MCOxSource);
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure I2Sx clock source
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 220


1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_SetI2SClockSource\n
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_SetI2SClockSource
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  I2SxSource This parameter can be one of the following values:
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2SClockSource(uint32_t I2SxSource)
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR2, (I2SxSource & 0xFFFF0000U), (I2SxSource << 16U));
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure USB clock source
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_SetUSBClockSource\n
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_SetUSBClockSource
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_USBPRE, USBxSource);
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else /*RCC_CFGR_OTGFSPRE*/
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_OTGFSPRE, USBxSource);
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure ADC clock source
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_SetADCClockSource
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  ADCxSource This parameter can be one of the following values:
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetADCClockSource(uint32_t ADCxSource)
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_ADCPRE, ADCxSource);
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get I2Sx clock source
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 221


1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_GetI2SClockSource\n
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_GetI2SClockSource
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  I2Sx This parameter can be one of the following values:
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2SClockSource(uint32_t I2Sx)
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, I2Sx) >> 16U | I2Sx);
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get USBx clock source
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_GetUSBClockSource\n
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_GetUSBClockSource
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, USBx));
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get ADCx clock source
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_GetADCClockSource
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  ADCx This parameter can be one of the following values:
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSOURCE
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetADCClockSource(uint32_t ADCx)
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, ADCx));
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 222


1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       the Backup domain is reset. The BDRST bit can be used to reset them.
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable RTC
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable RTC
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 223


1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable PLL
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable PLL
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 224


1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLXTPRE      LL_RCC_PLL_ConfigDomain_SYS\n
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLMULL       LL_RCC_PLL_ConfigDomain_SYS\n
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1       LL_RCC_PLL_ConfigDomain_SYS\n
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1SRC    LL_RCC_PLL_ConfigDomain_SYS
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI_DIV_2
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_1
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_2 (*)
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_3 (*)
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_4 (*)
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_5 (*)
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_6 (*)
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_7 (*)
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_8 (*)
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_9 (*)
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_10 (*)
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_11 (*)
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_12 (*)
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_13 (*)
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_14 (*)
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_15 (*)
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_16 (*)
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_1 (*)
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_2 (*)
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_3 (*)
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_4 (*)
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_5 (*)
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_6 (*)
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_7 (*)
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_8 (*)
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_9 (*)
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_10 (*)
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_11 (*)
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_12 (*)
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_13 (*)
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_14 (*)
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_15 (*)
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_16 (*)
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2 (*)
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3 (*)
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 225


1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5 (*)
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10 (*)
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11 (*)
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12 (*)
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13 (*)
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14 (*)
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15 (*)
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16 (*)
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul)
 1521              		.loc 10 1477 22 view .LVU458
 1522              	.LBB229:
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL,
 1523              		.loc 10 1479 3 view .LVU459
 1524 003c 1B4A     		ldr	r2, .L44+4
 1525 003e 5368     		ldr	r3, [r2, #4]
 1526 0040 23F47C13 		bic	r3, r3, #4128768
 1527 0044 43F46013 		orr	r3, r3, #3670016
 1528 0048 5360     		str	r3, [r2, #4]
 1529              	.LVL85:
 1530              		.loc 10 1479 3 is_stmt 0 view .LVU460
 1531              	.LBE229:
 1532              	.LBE228:
 174:Src/main.c    **** 
 1533              		.loc 2 174 3 is_stmt 1 view .LVU461
 1534              	.LBB230:
 1535              	.LBI230:
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1536              		.loc 10 1387 22 view .LVU462
 1537              	.LBB231:
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1538              		.loc 10 1389 3 view .LVU463
 1539 004a 1368     		ldr	r3, [r2]
 1540 004c 43F08073 		orr	r3, r3, #16777216
 1541 0050 1360     		str	r3, [r2]
 1542              	.L39:
 1543              	.LBE231:
 1544              	.LBE230:
 180:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 1545              		.loc 2 180 3 discriminator 1 view .LVU464
 177:Src/main.c    ****   {
 1546              		.loc 2 177 30 discriminator 1 view .LVU465
 1547              	.LBB232:
 1548              	.LBI232:
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1549              		.loc 10 1408 26 discriminator 1 view .LVU466
 1550              	.LBB233:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 226


1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1551              		.loc 10 1410 3 discriminator 1 view .LVU467
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1552              		.loc 10 1410 11 is_stmt 0 discriminator 1 view .LVU468
 1553 0052 164B     		ldr	r3, .L44+4
 1554 0054 1B68     		ldr	r3, [r3]
 1555              	.LBE233:
 1556              	.LBE232:
 177:Src/main.c    ****   {
 1557              		.loc 2 177 30 discriminator 1 view .LVU469
 1558 0056 13F0007F 		tst	r3, #33554432
 1559 005a FAD0     		beq	.L39
 181:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_2);
 1560              		.loc 2 181 3 is_stmt 1 view .LVU470
 1561              	.LVL86:
 1562              	.LBB234:
 1563              	.LBI234:
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1564              		.loc 10 1047 22 view .LVU471
 1565              	.LBB235:
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1566              		.loc 10 1049 3 view .LVU472
 1567 005c 134B     		ldr	r3, .L44+4
 1568 005e 5A68     		ldr	r2, [r3, #4]
 1569 0060 22F0F002 		bic	r2, r2, #240
 1570 0064 5A60     		str	r2, [r3, #4]
 1571              	.LVL87:
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1572              		.loc 10 1049 3 is_stmt 0 view .LVU473
 1573              	.LBE235:
 1574              	.LBE234:
 182:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 1575              		.loc 2 182 3 is_stmt 1 view .LVU474
 1576              	.LBB236:
 1577              	.LBI236:
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1578              		.loc 10 1063 22 view .LVU475
 1579              	.LBB237:
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1580              		.loc 10 1065 3 view .LVU476
 1581 0066 5A68     		ldr	r2, [r3, #4]
 1582 0068 22F4E062 		bic	r2, r2, #1792
 1583 006c 42F48062 		orr	r2, r2, #1024
 1584 0070 5A60     		str	r2, [r3, #4]
 1585              	.LVL88:
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1586              		.loc 10 1065 3 is_stmt 0 view .LVU477
 1587              	.LBE237:
 1588              	.LBE236:
 183:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 1589              		.loc 2 183 3 is_stmt 1 view .LVU478
 1590              	.LBB238:
 1591              	.LBI238:
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1592              		.loc 10 1079 22 view .LVU479
 1593              	.LBB239:
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 227


 1594              		.loc 10 1081 3 view .LVU480
 1595 0072 5A68     		ldr	r2, [r3, #4]
 1596 0074 22F46052 		bic	r2, r2, #14336
 1597 0078 5A60     		str	r2, [r3, #4]
 1598              	.LVL89:
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1599              		.loc 10 1081 3 is_stmt 0 view .LVU481
 1600              	.LBE239:
 1601              	.LBE238:
 184:Src/main.c    **** 
 1602              		.loc 2 184 3 is_stmt 1 view .LVU482
 1603              	.LBB240:
 1604              	.LBI240:
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1605              		.loc 10 1014 22 view .LVU483
 1606              	.LBB241:
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1607              		.loc 10 1016 3 view .LVU484
 1608 007a 5A68     		ldr	r2, [r3, #4]
 1609 007c 22F00302 		bic	r2, r2, #3
 1610 0080 42F00202 		orr	r2, r2, #2
 1611 0084 5A60     		str	r2, [r3, #4]
 1612              	.LVL90:
 1613              	.L40:
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1614              		.loc 10 1016 3 is_stmt 0 view .LVU485
 1615              	.LBE241:
 1616              	.LBE240:
 190:Src/main.c    ****   LL_SetSystemCoreClock(64000000);
 1617              		.loc 2 190 3 is_stmt 1 discriminator 1 view .LVU486
 187:Src/main.c    ****   {
 1618              		.loc 2 187 34 discriminator 1 view .LVU487
 1619              	.LBB242:
 1620              	.LBI242:
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 1621              		.loc 10 1027 26 discriminator 1 view .LVU488
 1622              	.LBB243:
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1623              		.loc 10 1029 3 discriminator 1 view .LVU489
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1624              		.loc 10 1029 21 is_stmt 0 discriminator 1 view .LVU490
 1625 0086 094B     		ldr	r3, .L44+4
 1626 0088 5B68     		ldr	r3, [r3, #4]
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 1627              		.loc 10 1029 10 discriminator 1 view .LVU491
 1628 008a 03F00C03 		and	r3, r3, #12
 1629              	.LBE243:
 1630              	.LBE242:
 187:Src/main.c    ****   {
 1631              		.loc 2 187 34 discriminator 1 view .LVU492
 1632 008e 082B     		cmp	r3, #8
 1633 0090 F9D1     		bne	.L40
 191:Src/main.c    **** 
 1634              		.loc 2 191 3 is_stmt 1 view .LVU493
 1635 0092 0748     		ldr	r0, .L44+8
 1636 0094 FFF7FEFF 		bl	LL_SetSystemCoreClock
 1637              	.LVL91:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 228


 194:Src/main.c    ****   {
 1638              		.loc 2 194 3 view .LVU494
 194:Src/main.c    ****   {
 1639              		.loc 2 194 7 is_stmt 0 view .LVU495
 1640 0098 0F20     		movs	r0, #15
 1641 009a FFF7FEFF 		bl	HAL_InitTick
 1642              	.LVL92:
 194:Src/main.c    ****   {
 1643              		.loc 2 194 6 view .LVU496
 1644 009e 00B9     		cbnz	r0, .L43
 198:Src/main.c    **** 
 1645              		.loc 2 198 1 view .LVU497
 1646 00a0 08BD     		pop	{r3, pc}
 1647              	.L43:
 196:Src/main.c    ****   }
 1648              		.loc 2 196 5 is_stmt 1 view .LVU498
 1649 00a2 FFF7FEFF 		bl	Error_Handler
 1650              	.LVL93:
 1651              	.L45:
 1652 00a6 00BF     		.align	2
 1653              	.L44:
 1654 00a8 00200240 		.word	1073881088
 1655 00ac 00100240 		.word	1073876992
 1656 00b0 0090D003 		.word	64000000
 1657              		.cfi_endproc
 1658              	.LFE708:
 1660              		.section	.text.main,"ax",%progbits
 1661              		.align	1
 1662              		.global	main
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1667              	main:
 1668              	.LFB707:
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1669              		.loc 2 78 1 view -0
 1670              		.cfi_startproc
 1671              		@ Volatile: function does not return.
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674 0000 08B5     		push	{r3, lr}
 1675              	.LCFI19:
 1676              		.cfi_def_cfa_offset 8
 1677              		.cfi_offset 3, -8
 1678              		.cfi_offset 14, -4
  86:Src/main.c    **** 
 1679              		.loc 2 86 3 view .LVU500
 1680 0002 FFF7FEFF 		bl	HAL_Init
 1681              	.LVL94:
  93:Src/main.c    **** 
 1682              		.loc 2 93 3 view .LVU501
 1683 0006 FFF7FEFF 		bl	SystemClock_Config
 1684              	.LVL95:
 100:Src/main.c    ****   MX_DMA_Init();
 1685              		.loc 2 100 3 view .LVU502
 1686 000a FFF7FEFF 		bl	MX_GPIO_Init
 1687              	.LVL96:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 229


 101:Src/main.c    ****   MX_TIM2_Init();
 1688              		.loc 2 101 3 view .LVU503
 1689 000e FFF7FEFF 		bl	MX_DMA_Init
 1690              	.LVL97:
 102:Src/main.c    ****   MX_USART1_UART_Init();
 1691              		.loc 2 102 3 view .LVU504
 1692 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1693              	.LVL98:
 103:Src/main.c    ****   MX_USART2_UART_Init();
 1694              		.loc 2 103 3 view .LVU505
 1695 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1696              	.LVL99:
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1697              		.loc 2 104 3 view .LVU506
 1698 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 1699              	.LVL100:
 110:Src/main.c    **** 
 1700              		.loc 2 110 3 view .LVU507
 1701 001e FFF7FEFF 		bl	osKernelInitialize
 1702              	.LVL101:
 130:Src/main.c    **** 
 1703              		.loc 2 130 3 view .LVU508
 130:Src/main.c    **** 
 1704              		.loc 2 130 23 is_stmt 0 view .LVU509
 1705 0022 054A     		ldr	r2, .L49
 1706 0024 0021     		movs	r1, #0
 1707 0026 0548     		ldr	r0, .L49+4
 1708 0028 FFF7FEFF 		bl	osThreadNew
 1709              	.LVL102:
 130:Src/main.c    **** 
 1710              		.loc 2 130 21 view .LVU510
 1711 002c 044B     		ldr	r3, .L49+8
 1712 002e 1860     		str	r0, [r3]
 141:Src/main.c    **** 
 1713              		.loc 2 141 3 is_stmt 1 view .LVU511
 1714 0030 FFF7FEFF 		bl	osKernelStart
 1715              	.LVL103:
 1716              	.L47:
 146:Src/main.c    ****   {
 1717              		.loc 2 146 3 discriminator 1 view .LVU512
 151:Src/main.c    ****   /* USER CODE END 3 */
 1718              		.loc 2 151 3 discriminator 1 view .LVU513
 146:Src/main.c    ****   {
 1719              		.loc 2 146 9 discriminator 1 view .LVU514
 1720 0034 FEE7     		b	.L47
 1721              	.L50:
 1722 0036 00BF     		.align	2
 1723              	.L49:
 1724 0038 00000000 		.word	.LANCHOR0
 1725 003c 00000000 		.word	StartDefaultTask
 1726 0040 00000000 		.word	.LANCHOR1
 1727              		.cfi_endproc
 1728              	.LFE707:
 1730              		.global	defaultTask_attributes
 1731              		.section	.rodata.str1.4,"aMS",%progbits,1
 1732              		.align	2
 1733              	.LC0:
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 230


 1734 0000 64656661 		.ascii	"defaultTask\000"
 1734      756C7454 
 1734      61736B00 
 1735              		.global	defaultTaskHandle
 1736              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR1,. + 0
 1741              	defaultTaskHandle:
 1742 0000 00000000 		.space	4
 1743              		.section	.rodata.defaultTask_attributes,"a"
 1744              		.align	2
 1745              		.set	.LANCHOR0,. + 0
 1748              	defaultTask_attributes:
 1749 0000 00000000 		.word	.LC0
 1750 0004 00000000 		.space	16
 1750      00000000 
 1750      00000000 
 1750      00000000 
 1751 0014 00020000 		.word	512
 1752 0018 18000000 		.word	24
 1753 001c 00000000 		.space	8
 1753      00000000 
 1754              		.text
 1755              	.Letext0:
 1756              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1757              		.file 12 "/Users/brianteam/Downloads/arm-gnu-toolchain-11.3.rel1-darwin-x86_64-arm-none-eabi/arm-n
 1758              		.file 13 "/Users/brianteam/Downloads/arm-gnu-toolchain-11.3.rel1-darwin-x86_64-arm-none-eabi/arm-n
 1759              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1760              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1761              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1762              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1763              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1764              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1765              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_utils.h"
 1766              		.file 21 "<built-in>"
ARM GAS  /var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s 			page 231


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:18     .text.NVIC_EncodePriority:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:23     .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:86     .text.MX_DMA_Init:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:91     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:188    .text.MX_DMA_Init:0000000000000040 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:195    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:200    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:427    .text.MX_GPIO_Init:00000000000000bc $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:438    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:443    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:716    .text.MX_TIM2_Init:00000000000000e4 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:725    .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:730    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:958    .text.MX_USART1_UART_Init:00000000000000c4 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:969    .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:974    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1295   .text.MX_USART2_UART_Init:0000000000000104 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1305   .text.StartDefaultTask:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1311   .text.StartDefaultTask:0000000000000000 StartDefaultTask
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1338   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1344   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1378   .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1383   .text.Error_Handler:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1389   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1421   .text.SystemClock_Config:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1427   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1654   .text.SystemClock_Config:00000000000000a8 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1661   .text.main:0000000000000000 $t
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1667   .text.main:0000000000000000 main
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1724   .text.main:0000000000000038 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1748   .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1732   .rodata.str1.4:0000000000000000 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1741   .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1737   .bss.defaultTaskHandle:0000000000000000 $d
/var/folders/bs/_68147ln4jv13pgqtjvjqbww0000gn/T//ccSWPPuW.s:1744   .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
LL_GPIO_Init
memset
LL_TIM_Init
LL_TIM_OC_Init
LL_USART_Init
osDelay
HAL_IncTick
LL_SetSystemCoreClock
HAL_InitTick
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
